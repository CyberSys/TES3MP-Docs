<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_miscellaneous_functions" kind="class" language="C++" prot="public">
    <compoundname>MiscellaneousFunctions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_miscellaneous_functions_1a803a93ac134d4e1bc2247b9b41a507ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MiscellaneousFunctions::DoesFileExist</definition>
        <argsstring>(const char *filePath) noexcept</argsstring>
        <name>DoesFileExist</name>
        <param>
          <type>const char *</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Check whether a certain file exists. </para>        </briefdescription>
        <detaileddescription>
<para>This will be a case sensitive check on case sensitive filesystems.</para><para>Whenever you want to enforce case insensitivity, use <ref refid="class_miscellaneous_functions_1ac70f84bc896e3eac4e5f5b5fa8213a1a" kindref="member">GetCaseInsensitiveFilename()</ref> instead.</para><para><simplesect kind="return"><para>Whether the file exists or not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="31" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_miscellaneous_functions_1ac70f84bc896e3eac4e5f5b5fa8213a1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * MiscellaneousFunctions::GetCaseInsensitiveFilename</definition>
        <argsstring>(const char *folderPath, const char *filename) noexcept</argsstring>
        <name>GetCaseInsensitiveFilename</name>
        <param>
          <type>const char *</type>
          <declname>folderPath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Get the first filename in a folder that has a case insensitive match with the filename argument. </para>        </briefdescription>
        <detaileddescription>
<para>This is used to retain case insensitivity when opening data files on Linux.</para><para><simplesect kind="return"><para>The filename that matches. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="41" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.cpp" bodystart="19" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_miscellaneous_functions_1a0d13c3cd79da19352b2acee62e9f4597" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MiscellaneousFunctions::GetLastPlayerId</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetLastPlayerId</name>
        <briefdescription>
<para>Get the last player ID currently connected to the server. </para>        </briefdescription>
        <detaileddescription>
<para>Every player receives a unique numerical index known as their player ID upon joining the server.</para><para><simplesect kind="return"><para>The player ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="51" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_miscellaneous_functions_1a306a3bbe151e3f074abdfc309b88b7ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MiscellaneousFunctions::GetCurrentMpNum</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetCurrentMpNum</name>
        <briefdescription>
<para>Get the current (latest) mpNum generated by the server. </para>        </briefdescription>
        <detaileddescription>
<para>Every object that did not exist in an .ESM or .ESP data file and has instead been placed or spawned through a server-sent packet has a numerical index known as its mpNum.</para><para>When ObjectPlace and ObjectSpawn packets are received from players, their objects lack mpNums, so the server assigns them some based on incrementing the server&apos;s current mpNum, with the operation&apos;s final mpNum becoming the server&apos;s new current mpNum.</para><para><simplesect kind="return"><para>The mpNum. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="65" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_miscellaneous_functions_1ad0d0ef9717be12d2d68d0998afdeaa90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MiscellaneousFunctions::SetCurrentMpNum</definition>
        <argsstring>(int mpNum) noexcept</argsstring>
        <name>SetCurrentMpNum</name>
        <param>
          <type>int</type>
          <declname>mpNum</declname>
        </param>
        <briefdescription>
<para>Set the current (latest) mpNum generated by the server. </para>        </briefdescription>
        <detaileddescription>
<para>When restarting a server, it is important to revert to the previous current (latest) mpNum as stored in the server&apos;s data, so as to avoid starting over from 0 and ending up assigning duplicate mpNums to objects.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The number that should be used as the new current mpNum. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="77" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_miscellaneous_functions_1a012b2daa1dfc424f9f216d832cac8ab1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MiscellaneousFunctions::LogMessage</definition>
        <argsstring>(unsigned short level, const char *message) noexcept</argsstring>
        <name>LogMessage</name>
        <param>
          <type>unsigned short</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Write a log message with its own timestamp. </para>        </briefdescription>
        <detaileddescription>
<para>It will have &quot;[Script]:&quot; prepended to it so as to mark it as a script-generated log message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The logging level used (0 for LOG_VERBOSE, 1 for LOG_INFO, 2 for LOG_WARN, 3 for LOG_ERROR, 4 for LOG_FATAL). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message logged. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="89" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_miscellaneous_functions_1a4d5703a54f4c0d9f6736df593a12f545" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MiscellaneousFunctions::LogAppend</definition>
        <argsstring>(unsigned short level, const char *message) noexcept</argsstring>
        <name>LogAppend</name>
        <param>
          <type>unsigned short</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Write a log message without its own timestamp. </para>        </briefdescription>
        <detaileddescription>
<para>It will have &quot;[Script]:&quot; prepended to it so as to mark it as a script-generated log message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The logging level used (0 for LOG_VERBOSE, 1 for LOG_INFO, 2 for LOG_WARN, 3 for LOG_ERROR, 4 for LOG_FATAL). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message logged. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="101" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" line="19" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Miscellaneous.hpp" bodystart="18" bodyend="102"/>
    <listofallmembers>
      <member refid="class_miscellaneous_functions_1a803a93ac134d4e1bc2247b9b41a507ee" prot="public" virt="non-virtual"><scope>MiscellaneousFunctions</scope><name>DoesFileExist</name></member>
      <member refid="class_miscellaneous_functions_1ac70f84bc896e3eac4e5f5b5fa8213a1a" prot="public" virt="non-virtual"><scope>MiscellaneousFunctions</scope><name>GetCaseInsensitiveFilename</name></member>
      <member refid="class_miscellaneous_functions_1a306a3bbe151e3f074abdfc309b88b7ef" prot="public" virt="non-virtual"><scope>MiscellaneousFunctions</scope><name>GetCurrentMpNum</name></member>
      <member refid="class_miscellaneous_functions_1a0d13c3cd79da19352b2acee62e9f4597" prot="public" virt="non-virtual"><scope>MiscellaneousFunctions</scope><name>GetLastPlayerId</name></member>
      <member refid="class_miscellaneous_functions_1a4d5703a54f4c0d9f6736df593a12f545" prot="public" virt="non-virtual"><scope>MiscellaneousFunctions</scope><name>LogAppend</name></member>
      <member refid="class_miscellaneous_functions_1a012b2daa1dfc424f9f216d832cac8ab1" prot="public" virt="non-virtual"><scope>MiscellaneousFunctions</scope><name>LogMessage</name></member>
      <member refid="class_miscellaneous_functions_1ad0d0ef9717be12d2d68d0998afdeaa90" prot="public" virt="non-virtual"><scope>MiscellaneousFunctions</scope><name>SetCurrentMpNum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
