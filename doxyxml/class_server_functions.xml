<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_server_functions" kind="class" language="C++" prot="public">
    <compoundname>ServerFunctions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_server_functions_1a976832ca2c949d9bbae725f84b251a5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::StopServer</definition>
        <argsstring>(int code) noexcept</argsstring>
        <name>StopServer</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Shut down the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The shutdown code. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="45" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a7c59b3430f2d8c273c5b96de6d79a220" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::Kick</definition>
        <argsstring>(unsigned short pid) noexcept</argsstring>
        <name>Kick</name>
        <param>
          <type>unsigned short</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Kick a certain player from the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The player ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="53" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1aaa9fc54a8bc3b86b79ef7acae5447b39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::BanAddress</definition>
        <argsstring>(const char *ipAddress) noexcept</argsstring>
        <name>BanAddress</name>
        <param>
          <type>const char *</type>
          <declname>ipAddress</declname>
        </param>
        <briefdescription>
<para>Ban a certain IP address from the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>The IP address. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="61" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1af3ac7120ab323b839b8058d60a1bd699" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::UnbanAddress</definition>
        <argsstring>(const char *ipAddress) noexcept</argsstring>
        <name>UnbanAddress</name>
        <param>
          <type>const char *</type>
          <declname>ipAddress</declname>
        </param>
        <briefdescription>
<para>Unban a certain IP address from the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>The IP address. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="69" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a97ba98dbccb01728da4b97637bd2e120" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ServerFunctions::GetOperatingSystemType</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOperatingSystemType</name>
        <briefdescription>
<para>Get the type of the operating system used by the server. </para>        </briefdescription>
        <detaileddescription>
<para>Note: Currently, the type can be &quot;Windows&quot;, &quot;Linux&quot;, &quot;OS X&quot; or &quot;Unknown OS&quot;.</para><para><simplesect kind="return"><para>The type of the operating system. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="78" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1aeafdc2cd31edb76b27f85f4101bb3b35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ServerFunctions::GetArchitectureType</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetArchitectureType</name>
        <briefdescription>
<para>Get the architecture type used by the server. </para>        </briefdescription>
        <detaileddescription>
<para>Note: Currently, the type can be &quot;64-bit&quot;, &quot;32-bit&quot;, &quot;ARMv#&quot; or &quot;Unknown architecture&quot;.</para><para><simplesect kind="return"><para>The architecture type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="87" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a93a2ea525ef7f3ceb3ac9a1e2158da37" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ServerFunctions::GetServerVersion</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetServerVersion</name>
        <briefdescription>
<para>Get the TES3MP version of the server. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The server version. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="94" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a99168e42f7bc1155d157bc1abf381bf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ServerFunctions::GetProtocolVersion</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetProtocolVersion</name>
        <briefdescription>
<para>Get the protocol version of the server. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The protocol version. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="101" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a83f0a643446849f762c0681d33292dd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ServerFunctions::GetAvgPing</definition>
        <argsstring>(unsigned short pid) noexcept</argsstring>
        <name>GetAvgPing</name>
        <param>
          <type>unsigned short</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Get the average ping of a certain player. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The player ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The average ping. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="109" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a9aac89581ef210b6f4af38e5d65d2d53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ServerFunctions::GetIP</definition>
        <argsstring>(unsigned short pid) noexcept</argsstring>
        <name>GetIP</name>
        <param>
          <type>unsigned short</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Get the IP address of a certain player. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The player ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The IP address. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="117" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a5a67c86325bf83fc308b5683ad66cc09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned short</type>
        <definition>unsigned short ServerFunctions::GetPort</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetPort</name>
        <briefdescription>
<para>Get the port used by the server. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Port </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="124" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a39515a8917c81ac66702dee382eed595" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ServerFunctions::GetMaxPlayers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetMaxPlayers</name>
        <briefdescription>
<para>Get the maximum number of players. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Max players </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="131" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a46f8f3f43b0c543819d8e5d1d383e14a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ServerFunctions::HasPassword</definition>
        <argsstring>() noexcept</argsstring>
        <name>HasPassword</name>
        <briefdescription>
<para>Checking if the server requires a password to connect. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="138" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a9dd7df7bbdd5b3321a2762e8a9558b48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ServerFunctions::GetPluginEnforcementState</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetPluginEnforcementState</name>
        <briefdescription>
<para>Get the plugin enforcement state of the server. </para>        </briefdescription>
        <detaileddescription>
<para>If true, clients are required to use the same plugins as set for the server.</para><para><simplesect kind="return"><para>The enforcement state. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="147" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1ae521276c30fae484fea8ef8690807b11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ServerFunctions::GetScriptErrorIgnoringState</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetScriptErrorIgnoringState</name>
        <briefdescription>
<para>Get the script error ignoring state of the server. </para>        </briefdescription>
        <detaileddescription>
<para>If true, script errors will not crash the server.</para><para><simplesect kind="return"><para>The script error ignoring state. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="156" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1ab00321ea65c6c6677c405f3dd156e255" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::SetGameMode</definition>
        <argsstring>(const char *gameMode) noexcept</argsstring>
        <name>SetGameMode</name>
        <param>
          <type>const char *</type>
          <declname>gameMode</declname>
        </param>
        <briefdescription>
<para>Set the game mode of the server, as displayed in the server browser. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The new game mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="164" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1ab77f59baeaf2232d2ea31ec970b562ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::SetHostname</definition>
        <argsstring>(const char *name) noexcept</argsstring>
        <name>SetHostname</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the name of the server, as displayed in the server browser. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The new name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="172" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1ad888704baf5994e0c69e15feafa0755c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::SetServerPassword</definition>
        <argsstring>(const char *password) noexcept</argsstring>
        <name>SetServerPassword</name>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Set the password required to join the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="180" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a7f778d4e3a5bfacae521eb9f876f3457" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::SetPluginEnforcementState</definition>
        <argsstring>(bool state) noexcept</argsstring>
        <name>SetPluginEnforcementState</name>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set the plugin enforcement state of the server. </para>        </briefdescription>
        <detaileddescription>
<para>If true, clients are required to use the same plugins as set for the server.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The new enforcement state. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="190" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a73a3967d4ba9a086f23631c562269b8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::SetScriptErrorIgnoringState</definition>
        <argsstring>(bool state) noexcept</argsstring>
        <name>SetScriptErrorIgnoringState</name>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set whether script errors should be ignored or not. </para>        </briefdescription>
        <detaileddescription>
<para>If true, script errors will not crash the server, but could have any number of unforeseen consequences, which is why this is a highly experimental setting.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The new script error ignoring state. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="202" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a9642432439d5de130e669ebdd342deb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::SetRuleString</definition>
        <argsstring>(const char *key, const char *value) noexcept</argsstring>
        <name>SetRuleString</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a rule string for the server details displayed in the server browser. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the rule. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The string value of the rule. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="211" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="126" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1acca9427a5dd6ed37218fb655669e82a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::SetRuleValue</definition>
        <argsstring>(const char *key, double value) noexcept</argsstring>
        <name>SetRuleValue</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a rule value for the server details displayed in the server browser. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the rule. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The numerical value of the rule. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="220" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a022fb62f81106191fba399bf1ee4a73a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerFunctions::AddPluginHash</definition>
        <argsstring>(const char *pluginName, const char *hash) noexcept</argsstring>
        <name>AddPluginHash</name>
        <param>
          <type>const char *</type>
          <declname>pluginName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Adds plugins to the internal server structure to validate players. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pluginName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name with extension of the plugin or master file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>Hash string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="227" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="140" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_server_functions_1a0f1b89ea31518ddda8fc208717fa41ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ServerFunctions::GetModDir</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetModDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="229" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" line="36" column="1" bodyfile="C:/msys64/home/ICE/openmw-tes3mp-x64-0.7.0/apps/openmw-mp/Script/Functions/Server.hpp" bodystart="35" bodyend="230"/>
    <listofallmembers>
      <member refid="class_server_functions_1a022fb62f81106191fba399bf1ee4a73a" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>AddPluginHash</name></member>
      <member refid="class_server_functions_1aaa9fc54a8bc3b86b79ef7acae5447b39" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>BanAddress</name></member>
      <member refid="class_server_functions_1aeafdc2cd31edb76b27f85f4101bb3b35" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetArchitectureType</name></member>
      <member refid="class_server_functions_1a83f0a643446849f762c0681d33292dd8" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetAvgPing</name></member>
      <member refid="class_server_functions_1a9aac89581ef210b6f4af38e5d65d2d53" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetIP</name></member>
      <member refid="class_server_functions_1a39515a8917c81ac66702dee382eed595" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetMaxPlayers</name></member>
      <member refid="class_server_functions_1a0f1b89ea31518ddda8fc208717fa41ed" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetModDir</name></member>
      <member refid="class_server_functions_1a97ba98dbccb01728da4b97637bd2e120" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetOperatingSystemType</name></member>
      <member refid="class_server_functions_1a9dd7df7bbdd5b3321a2762e8a9558b48" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetPluginEnforcementState</name></member>
      <member refid="class_server_functions_1a5a67c86325bf83fc308b5683ad66cc09" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetPort</name></member>
      <member refid="class_server_functions_1a99168e42f7bc1155d157bc1abf381bf5" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetProtocolVersion</name></member>
      <member refid="class_server_functions_1ae521276c30fae484fea8ef8690807b11" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetScriptErrorIgnoringState</name></member>
      <member refid="class_server_functions_1a93a2ea525ef7f3ceb3ac9a1e2158da37" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>GetServerVersion</name></member>
      <member refid="class_server_functions_1a46f8f3f43b0c543819d8e5d1d383e14a" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>HasPassword</name></member>
      <member refid="class_server_functions_1a7c59b3430f2d8c273c5b96de6d79a220" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>Kick</name></member>
      <member refid="class_server_functions_1ab00321ea65c6c6677c405f3dd156e255" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>SetGameMode</name></member>
      <member refid="class_server_functions_1ab77f59baeaf2232d2ea31ec970b562ac" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>SetHostname</name></member>
      <member refid="class_server_functions_1a7f778d4e3a5bfacae521eb9f876f3457" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>SetPluginEnforcementState</name></member>
      <member refid="class_server_functions_1a9642432439d5de130e669ebdd342deb3" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>SetRuleString</name></member>
      <member refid="class_server_functions_1acca9427a5dd6ed37218fb655669e82a1" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>SetRuleValue</name></member>
      <member refid="class_server_functions_1a73a3967d4ba9a086f23631c562269b8c" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>SetScriptErrorIgnoringState</name></member>
      <member refid="class_server_functions_1ad888704baf5994e0c69e15feafa0755c" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>SetServerPassword</name></member>
      <member refid="class_server_functions_1a976832ca2c949d9bbae725f84b251a5a" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>StopServer</name></member>
      <member refid="class_server_functions_1af3ac7120ab323b839b8058d60a1bd699" prot="public" virt="non-virtual"><scope>ServerFunctions</scope><name>UnbanAddress</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
