<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_records_dynamic_functions" kind="class" language="C++" prot="public">
    <compoundname>RecordsDynamicFunctions</compoundname>
    <includes refid="_records_dynamic_8hpp" local="no">RecordsDynamic.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_records_dynamic_functions_1a55f675eaac2b1de74aa34cee11575824" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::ClearRecords</definition>
        <argsstring>() noexcept</argsstring>
        <name>ClearRecords</name>
        <qualifiedname>RecordsDynamicFunctions::ClearRecords</qualifiedname>
        <briefdescription>
<para>Clear the data from the records stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="150" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="63" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ae9e8035a077cd616d12af24181bc34a1" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned short</type>
        <definition>unsigned short RecordsDynamicFunctions::GetRecordType</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetRecordType</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordType</qualifiedname>
        <briefdescription>
<para>Get the type of records in the read worldstate&apos;s dynamic records. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of records (0 for SPELL, 1 for POTION, 2 for ENCHANTMENT, 3 for NPC). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="158" column="27" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a33d0ebbd8e634d3736005a3c98df77de" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RecordsDynamicFunctions::GetRecordCount</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetRecordCount</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordCount</qualifiedname>
        <briefdescription>
<para>Get the number of records in the read worldstate&apos;s dynamic records. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of records. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="165" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a3eb8ad54707bd4e153d6fe3e231bc024" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RecordsDynamicFunctions::GetRecordEffectCount</definition>
        <argsstring>(unsigned int recordIndex) noexcept</argsstring>
        <name>GetRecordEffectCount</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectCount</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <briefdescription>
<para>Get the number of effects for the record at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of effects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="174" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1adac3701d0a85aa62f4551b192fce78fa" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * RecordsDynamicFunctions::GetRecordId</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordId</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the id of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The id of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="183" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="119" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a940aee2753fa4f05f3562f196b384517" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * RecordsDynamicFunctions::GetRecordBaseId</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordBaseId</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordBaseId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the base id (i.e. the id this record should inherit default values from) of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The base id of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="193" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="133" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a6f60bf66bebda36ab7f9efa4baac5f22" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordSubtype</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordSubtype</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordSubtype</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the subtype of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The type of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="202" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1af37d21a08ddc03977383dd0344b97b92" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * RecordsDynamicFunctions::GetRecordName</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordName</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordName</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the name of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The name of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="211" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="155" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a45e86cd6855162583b32992b0a296451" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * RecordsDynamicFunctions::GetRecordModel</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordModel</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordModel</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the model of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The model of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="220" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="175" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a7d41119123fc6f912a443ba646fe6778" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * RecordsDynamicFunctions::GetRecordIcon</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordIcon</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordIcon</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the icon of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The icon of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="229" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="185" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a2e037adfa890e4f09c4ae5bfbdc531cf" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * RecordsDynamicFunctions::GetRecordScript</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordScript</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordScript</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the script of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The script of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="238" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="195" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a1fc720583293c03f5f2c2977b567ef47" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * RecordsDynamicFunctions::GetRecordEnchantmentId</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordEnchantmentId</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEnchantmentId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the enchantment id of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The enchantment id of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="247" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="205" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a2762225f4d1998d8d0e0baae25a85c9e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordEnchantmentCharge</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordEnchantmentCharge</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEnchantmentCharge</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the enchantment charge of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The enchantment charge of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="256" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="221" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ad2e52af30a89ee2c317375b468562336" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordAutoCalc</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordAutoCalc</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordAutoCalc</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the auto-calculation flag value of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The auto-calculation flag value of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="265" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="237" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a72aa5ddab64a44f4f6fbb7c86dff4ad6" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordCharge</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordCharge</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordCharge</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the charge of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The charge of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="274" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="247" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1afa7e21244b6d4cc7e96a53f66c977018" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordCost</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordCost</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordCost</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the cost of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The cost of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="283" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="257" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a19e9638a7a585556b3137d067aa72858" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordFlags</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordFlags</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordFlags</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the flags of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The flags of the spell as an integer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="292" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="269" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a6c8391a548217ed36557d2748db0a606" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordValue</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordValue</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordValue</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the value of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="301" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="281" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a9ef313fe4d0507801e423b69e1dc567b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double RecordsDynamicFunctions::GetRecordWeight</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordWeight</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordWeight</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the weight of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The weight of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="310" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="291" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a23a8dfb11c35adab4e6adc7c1186b7db" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RecordsDynamicFunctions::GetRecordQuantity</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetRecordQuantity</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordQuantity</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the quantity of the record at a certain index in the read worldstate&apos;s dynamic records of the current type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The brewed count of the record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="319" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="301" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a6b265a6597a04628bfc27315c4126490" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RecordsDynamicFunctions::GetRecordEffectId</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectId</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the ID of the effect at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ID of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="329" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a859ce33dc90e7c94d3a76191102b23b9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordEffectAttribute</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectAttribute</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectAttribute</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the ID of the attribute modified by the effect at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The attribute ID for the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="339" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a4e470e4e127380e8ff5236aac4736b6d" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordEffectSkill</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectSkill</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectSkill</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the ID of the skill modified by the effect at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The skill ID for the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="349" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ab99501eac7cf206f19afea0dde821077" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int RecordsDynamicFunctions::GetRecordEffectRangeType</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectRangeType</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectRangeType</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the range type of the effect at a certain index in the read worldstate&apos;s current records (0 for self, 1 for touch, 2 for target). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The range of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="359" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1acbd660bd430bd3cd8fa5bac0be32e4f0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordEffectArea</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectArea</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectArea</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the area of the effect at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The area of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="369" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a7b1e9ba17b20ec841a748e836e72c65e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordEffectDuration</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectDuration</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectDuration</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the duration of the effect at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The duration of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="379" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1adbb4e2dde82b908b776f966b749ec1c8" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordEffectMagnitudeMax</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectMagnitudeMax</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectMagnitudeMax</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the maximum magnitude of the effect at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum magnitude of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="389" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a1e12ba58233b4d4f11556d3ac2157868" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int RecordsDynamicFunctions::GetRecordEffectMagnitudeMin</definition>
        <argsstring>(unsigned int recordIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetRecordEffectMagnitudeMin</name>
        <qualifiedname>RecordsDynamicFunctions::GetRecordEffectMagnitudeMin</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>recordIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the minimum magnitude of the effect at a certain index in the read worldstate&apos;s current records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The minimum magnitude of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="399" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a188d0a0fb4e0af73dcc74ab40bc7018d" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordType</definition>
        <argsstring>(unsigned int type) noexcept</argsstring>
        <name>SetRecordType</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordType</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set which type of temporary records stored on the server should have their data changed via setter functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of records. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="408" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aa27a0ccd062643a8b866cc3f429d8e0c" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordId</definition>
        <argsstring>(const char *id) noexcept</argsstring>
        <name>SetRecordId</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the id of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="417" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="358" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a97c48214579d21427452bdd515776bd8" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordBaseId</definition>
        <argsstring>(const char *baseId) noexcept</argsstring>
        <name>SetRecordBaseId</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordBaseId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>baseId</declname>
        </param>
        <briefdescription>
<para>Set the base id (i.e. the id this record should inherit default values from) of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseId</parametername>
</parameternamelist>
<parameterdescription>
<para>The baseId of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="427" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="414" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1afd4bb55a4371bc35f003f1e9aff4fb68" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordInventoryBaseId</definition>
        <argsstring>(const char *inventoryBaseId) noexcept</argsstring>
        <name>SetRecordInventoryBaseId</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordInventoryBaseId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>inventoryBaseId</declname>
        </param>
        <briefdescription>
<para>Set the inventory base id (i.e. the id this record should inherit its inventory contents from) of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inventoryBaseId</parametername>
</parameternamelist>
<parameterdescription>
<para>The inventoryBaseId of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="437" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="472" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a171323e896490838adf5b476ca8a5307" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordSubtype</definition>
        <argsstring>(unsigned int subtype) noexcept</argsstring>
        <name>SetRecordSubtype</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordSubtype</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>subtype</declname>
        </param>
        <briefdescription>
<para>Set the subtype of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The spell type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="446" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="484" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a409f1096718620b4d70cbce65c6ce5d2" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordName</definition>
        <argsstring>(const char *name) noexcept</argsstring>
        <name>SetRecordName</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordName</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the name of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="455" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="513" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aa4b66cbd10689122eb7dde723c31dc89" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordModel</definition>
        <argsstring>(const char *model) noexcept</argsstring>
        <name>SetRecordModel</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordModel</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Set the model of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The model of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="464" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="564" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aef20414580516fcd12240aaec0cdec00" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordIcon</definition>
        <argsstring>(const char *icon) noexcept</argsstring>
        <name>SetRecordIcon</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordIcon</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Set the icon of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>icon</parametername>
</parameternamelist>
<parameterdescription>
<para>The icon of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="473" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="615" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a120642cb42a4ed4254e13d39c8f9be8b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordScript</definition>
        <argsstring>(const char *script) noexcept</argsstring>
        <name>SetRecordScript</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordScript</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>script</declname>
        </param>
        <briefdescription>
<para>Set the script of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>script</parametername>
</parameternamelist>
<parameterdescription>
<para>The script of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="482" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="652" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aa4ff09994ca90d7ac31ad28048b6943f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEnchantmentId</definition>
        <argsstring>(const char *enchantmentId) noexcept</argsstring>
        <name>SetRecordEnchantmentId</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEnchantmentId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>enchantmentId</declname>
        </param>
        <briefdescription>
<para>Set the enchantment id of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enchantmentId</parametername>
</parameternamelist>
<parameterdescription>
<para>The enchantment id of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="491" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="699" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1af4755706ce8a3809dfbc94fb0f5dec3a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEnchantmentCharge</definition>
        <argsstring>(int enchantmentCharge) noexcept</argsstring>
        <name>SetRecordEnchantmentCharge</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEnchantmentCharge</qualifiedname>
        <param>
          <type>int</type>
          <declname>enchantmentCharge</declname>
        </param>
        <briefdescription>
<para>Set the enchantment charge of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enchantmentCharge</parametername>
</parameternamelist>
<parameterdescription>
<para>The enchantmentCharge of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="500" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="720" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a1602ed9a7638e408f0651d4670f1d799" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordAutoCalc</definition>
        <argsstring>(int autoCalc) noexcept</argsstring>
        <name>SetRecordAutoCalc</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordAutoCalc</qualifiedname>
        <param>
          <type>int</type>
          <declname>autoCalc</declname>
        </param>
        <briefdescription>
<para>Set the auto-calculation flag value of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>autoCalc</parametername>
</parameternamelist>
<parameterdescription>
<para>The auto-calculation flag value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="509" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="741" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a6bde9d1d6ec67c54299298eb958f45ec" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordCharge</definition>
        <argsstring>(int charge) noexcept</argsstring>
        <name>SetRecordCharge</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordCharge</qualifiedname>
        <param>
          <type>int</type>
          <declname>charge</declname>
        </param>
        <briefdescription>
<para>Set the charge of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>charge</parametername>
</parameternamelist>
<parameterdescription>
<para>The charge of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="518" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="769" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aa32bd40b1a851b47f5d723e42f3bfb0a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordCost</definition>
        <argsstring>(int cost) noexcept</argsstring>
        <name>SetRecordCost</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordCost</qualifiedname>
        <param>
          <type>int</type>
          <declname>cost</declname>
        </param>
        <briefdescription>
<para>Set the cost of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cost</parametername>
</parameternamelist>
<parameterdescription>
<para>The cost of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="527" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="784" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a929e0e63ad523189b59789174be1d969" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordFlags</definition>
        <argsstring>(int flags) noexcept</argsstring>
        <name>SetRecordFlags</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordFlags</qualifiedname>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set the flags of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="536" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="801" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a5431a07ca410a81e2ebfb20748e48ec2" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordValue</definition>
        <argsstring>(int value) noexcept</argsstring>
        <name>SetRecordValue</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordValue</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the value of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="545" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="830" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a41c45282b5f246b5170aace38cf06f8e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordWeight</definition>
        <argsstring>(double weight) noexcept</argsstring>
        <name>SetRecordWeight</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordWeight</qualifiedname>
        <param>
          <type>double</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Set the weight of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="554" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="867" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ac43ad905dd428ee3eba0663bfbf3c8ba" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordQuality</definition>
        <argsstring>(double quality) noexcept</argsstring>
        <name>SetRecordQuality</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordQuality</qualifiedname>
        <param>
          <type>double</type>
          <declname>quality</declname>
        </param>
        <briefdescription>
<para>Set the item quality of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quality</parametername>
</parameternamelist>
<parameterdescription>
<para>The quality of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="563" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="906" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a169e79e3beed5e140b1402d258eb3d6f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordUses</definition>
        <argsstring>(int uses) noexcept</argsstring>
        <name>SetRecordUses</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordUses</qualifiedname>
        <param>
          <type>int</type>
          <declname>uses</declname>
        </param>
        <briefdescription>
<para>Set the number of uses of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uses</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of uses of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="572" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="927" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a20e07d8db4249b7b60c314fa80d9bfbc" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordTime</definition>
        <argsstring>(int time) noexcept</argsstring>
        <name>SetRecordTime</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordTime</qualifiedname>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set the time of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="581" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="946" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ad53bae9ac709a2ab1857a90d0825e68a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordRadius</definition>
        <argsstring>(int radius) noexcept</argsstring>
        <name>SetRecordRadius</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordRadius</qualifiedname>
        <param>
          <type>int</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Set the radius of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="590" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="961" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a84d86b7d85660bbe67fd59fc0382d0c5" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordColor</definition>
        <argsstring>(unsigned int red, unsigned int green, unsigned int blue) noexcept</argsstring>
        <name>SetRecordColor</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordColor</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>red</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>green</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
<para>Set the color of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>red</parametername>
</parameternamelist>
<parameterdescription>
<para>The red value of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>green</parametername>
</parameternamelist>
<parameterdescription>
<para>The green value of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="601" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="976" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aaa54aebf2e59c23822dfc2078c6efc6e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordArmorRating</definition>
        <argsstring>(int armorRating) noexcept</argsstring>
        <name>SetRecordArmorRating</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordArmorRating</qualifiedname>
        <param>
          <type>int</type>
          <declname>armorRating</declname>
        </param>
        <briefdescription>
<para>Set the armor rating of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>armorRating</parametername>
</parameternamelist>
<parameterdescription>
<para>The armor rating of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="610" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="991" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a63bcea217ee8486818fec2ca06adf91c" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordHealth</definition>
        <argsstring>(int health) noexcept</argsstring>
        <name>SetRecordHealth</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordHealth</qualifiedname>
        <param>
          <type>int</type>
          <declname>health</declname>
        </param>
        <briefdescription>
<para>Set the health of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>health</parametername>
</parameternamelist>
<parameterdescription>
<para>The health of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="619" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1006" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a477d85abd9abdc96fe1097bfec3d7677" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordDamageChop</definition>
        <argsstring>(unsigned int minDamage, unsigned int maxDamage) noexcept</argsstring>
        <name>SetRecordDamageChop</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordDamageChop</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>minDamage</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>maxDamage</declname>
        </param>
        <briefdescription>
<para>Set the chop damage of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minDamage</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum damage of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxDamage</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum damage of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="629" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1027" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a91bee124525272ae91d09dc01a10d18a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordDamageSlash</definition>
        <argsstring>(unsigned int minDamage, unsigned int maxDamage) noexcept</argsstring>
        <name>SetRecordDamageSlash</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordDamageSlash</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>minDamage</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>maxDamage</declname>
        </param>
        <briefdescription>
<para>Set the slash damage of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minDamage</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum damage of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxDamage</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum damage of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="639" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1050" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a2d506e1511dbd5948cf819a85bb03c36" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordDamageThrust</definition>
        <argsstring>(unsigned int minDamage, unsigned int maxDamage) noexcept</argsstring>
        <name>SetRecordDamageThrust</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordDamageThrust</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>minDamage</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>maxDamage</declname>
        </param>
        <briefdescription>
<para>Set the thrust damage of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minDamage</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum damage of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxDamage</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum damage of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="649" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1073" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a2735e1bbc3c68a3bdfb13a7007dda94d" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordReach</definition>
        <argsstring>(double reach) noexcept</argsstring>
        <name>SetRecordReach</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordReach</qualifiedname>
        <param>
          <type>double</type>
          <declname>reach</declname>
        </param>
        <briefdescription>
<para>Set the reach of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reach</parametername>
</parameternamelist>
<parameterdescription>
<para>The reach of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="658" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1096" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a1c22e5d5e81bf66d3457d50778d5fcb0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordSpeed</definition>
        <argsstring>(double speed) noexcept</argsstring>
        <name>SetRecordSpeed</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordSpeed</qualifiedname>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Set the speed of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The speed of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="667" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1111" bodyend="1124"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a33c7ba8b0bb863dd07e9ae2538633eb7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordKeyState</definition>
        <argsstring>(bool keyState) noexcept</argsstring>
        <name>SetRecordKeyState</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordKeyState</qualifiedname>
        <param>
          <type>bool</type>
          <declname>keyState</declname>
        </param>
        <briefdescription>
<para>Set whether the temporary record stored on the server for the currently specified record type is a key. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: This is only applicable to Miscellaneous records.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyState</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the record is a key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="678" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1126" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a70ea6f3782ef7a0f80ee9c7a801956cb" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordScrollState</definition>
        <argsstring>(bool scrollState) noexcept</argsstring>
        <name>SetRecordScrollState</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordScrollState</qualifiedname>
        <param>
          <type>bool</type>
          <declname>scrollState</declname>
        </param>
        <briefdescription>
<para>Set whether the temporary record stored on the server for the currently specified record type is a scroll. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: This is only applicable to Book records.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scrollState</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the record is a scroll. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="689" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1141" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aec2d2b092b5161d127cf2a63d8f84bb9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordSkillId</definition>
        <argsstring>(int skillId) noexcept</argsstring>
        <name>SetRecordSkillId</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordSkillId</qualifiedname>
        <param>
          <type>int</type>
          <declname>skillId</declname>
        </param>
        <briefdescription>
<para>Set the skill ID of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>skillId</parametername>
</parameternamelist>
<parameterdescription>
<para>The skill ID of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="698" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1156" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aa86a4ca966f920c3dbe92cc8931e8943" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordText</definition>
        <argsstring>(const char *text) noexcept</argsstring>
        <name>SetRecordText</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set the text of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="707" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1171" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a275cbc77cacedf826821e2cc941dd6fe" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordHair</definition>
        <argsstring>(const char *hair) noexcept</argsstring>
        <name>SetRecordHair</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordHair</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>hair</declname>
        </param>
        <briefdescription>
<para>Set the hair of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hair</parametername>
</parameternamelist>
<parameterdescription>
<para>The hair of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="716" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1186" bodyend="1199"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a6d154670bfa5b826fdae81fccbd843d9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordHead</definition>
        <argsstring>(const char *head) noexcept</argsstring>
        <name>SetRecordHead</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordHead</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Set the head of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="725" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1201" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aab3d3757e7ee5374ce2dc0c678412989" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordGender</definition>
        <argsstring>(unsigned int gender) noexcept</argsstring>
        <name>SetRecordGender</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordGender</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>gender</declname>
        </param>
        <briefdescription>
<para>Set the gender of the temporary record stored on the server for the currently specified record type (0 for female, 1 for male). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gender</parametername>
</parameternamelist>
<parameterdescription>
<para>The gender of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="734" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1216" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a40bf70d5b486642ed9baa33019bfdc63" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordRace</definition>
        <argsstring>(const char *race) noexcept</argsstring>
        <name>SetRecordRace</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordRace</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>race</declname>
        </param>
        <briefdescription>
<para>Set the race of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>race</parametername>
</parameternamelist>
<parameterdescription>
<para>The race of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="743" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1233" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a45d9dd24515a2688a751de5f439f86aa" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordClass</definition>
        <argsstring>(const char *charClass) noexcept</argsstring>
        <name>SetRecordClass</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordClass</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>charClass</declname>
        </param>
        <briefdescription>
<para>Set the character class of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>charClass</parametername>
</parameternamelist>
<parameterdescription>
<para>The character class of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="752" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1247" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a559d817672e12f2f118dcf44d71358a7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordFaction</definition>
        <argsstring>(const char *faction) noexcept</argsstring>
        <name>SetRecordFaction</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordFaction</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>faction</declname>
        </param>
        <briefdescription>
<para>Set the faction of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>faction</parametername>
</parameternamelist>
<parameterdescription>
<para>The faction of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="761" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1257" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a1e58bec8cbcc5ad21931af18f766b581" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordScale</definition>
        <argsstring>(double scale) noexcept</argsstring>
        <name>SetRecordScale</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordScale</qualifiedname>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Set the scale of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="770" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1272" bodyend="1285"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a9c31a0a7281db0a702187170c7edc3d4" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordBloodType</definition>
        <argsstring>(int bloodType) noexcept</argsstring>
        <name>SetRecordBloodType</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordBloodType</qualifiedname>
        <param>
          <type>int</type>
          <declname>bloodType</declname>
        </param>
        <briefdescription>
<para>Set the blood type of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bloodType</parametername>
</parameternamelist>
<parameterdescription>
<para>The blood type of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="779" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1287" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a6bef67b71238f3b397306b573aaf8e96" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordVampireState</definition>
        <argsstring>(bool vampireState) noexcept</argsstring>
        <name>SetRecordVampireState</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordVampireState</qualifiedname>
        <param>
          <type>bool</type>
          <declname>vampireState</declname>
        </param>
        <briefdescription>
<para>Set the vampire state of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vampireState</parametername>
</parameternamelist>
<parameterdescription>
<para>The vampire state of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="788" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1302" bodyend="1315"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aa792f6436dc2a6011dc2a17a55804f12" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordLevel</definition>
        <argsstring>(int level) noexcept</argsstring>
        <name>SetRecordLevel</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordLevel</qualifiedname>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set the level of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The level of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="797" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1317" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a2c733fd3c12a15d77ebcff7bfe7142e4" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordMagicka</definition>
        <argsstring>(int magicka) noexcept</argsstring>
        <name>SetRecordMagicka</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordMagicka</qualifiedname>
        <param>
          <type>int</type>
          <declname>magicka</declname>
        </param>
        <briefdescription>
<para>Set the magicka of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>magicka</parametername>
</parameternamelist>
<parameterdescription>
<para>The magicka of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="806" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1334" bodyend="1349"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a2d7a6ffb0df1222eaa380fcfe6554a4f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordFatigue</definition>
        <argsstring>(int fatigue) noexcept</argsstring>
        <name>SetRecordFatigue</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordFatigue</qualifiedname>
        <param>
          <type>int</type>
          <declname>fatigue</declname>
        </param>
        <briefdescription>
<para>Set the fatigue of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fatigue</parametername>
</parameternamelist>
<parameterdescription>
<para>The fatigue of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="815" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1351" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a23c78194543b869a9aca8a49d35f0881" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordSoulValue</definition>
        <argsstring>(int soulValue) noexcept</argsstring>
        <name>SetRecordSoulValue</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordSoulValue</qualifiedname>
        <param>
          <type>int</type>
          <declname>soulValue</declname>
        </param>
        <briefdescription>
<para>Set the soul value of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>soulValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The soul value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="824" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1368" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a9237ec006a1291aea740dae04d618803" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordAIFight</definition>
        <argsstring>(int aiFight) noexcept</argsstring>
        <name>SetRecordAIFight</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordAIFight</qualifiedname>
        <param>
          <type>int</type>
          <declname>aiFight</declname>
        </param>
        <briefdescription>
<para>Set the AI fight value of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aiFight</parametername>
</parameternamelist>
<parameterdescription>
<para>The AI fight value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="833" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1383" bodyend="1398"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a0d3cf7bd18f0eef24c3eb83dfb477d93" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordAIFlee</definition>
        <argsstring>(int aiFlee) noexcept</argsstring>
        <name>SetRecordAIFlee</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordAIFlee</qualifiedname>
        <param>
          <type>int</type>
          <declname>aiFlee</declname>
        </param>
        <briefdescription>
<para>Set the AI flee value of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aiFlee</parametername>
</parameternamelist>
<parameterdescription>
<para>The AI flee value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="842" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1400" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ad33284940be0d3150c82093b649ca114" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordAIAlarm</definition>
        <argsstring>(int aiAlarm) noexcept</argsstring>
        <name>SetRecordAIAlarm</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordAIAlarm</qualifiedname>
        <param>
          <type>int</type>
          <declname>aiAlarm</declname>
        </param>
        <briefdescription>
<para>Set the AI alarm value of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aiAlarm</parametername>
</parameternamelist>
<parameterdescription>
<para>The AI alarm value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="851" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1417" bodyend="1432"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a9bb5c49b3e5ca8f7abf8db29f55eb200" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordAIServices</definition>
        <argsstring>(int aiServices) noexcept</argsstring>
        <name>SetRecordAIServices</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordAIServices</qualifiedname>
        <param>
          <type>int</type>
          <declname>aiServices</declname>
        </param>
        <briefdescription>
<para>Set the AI services value of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aiServices</parametername>
</parameternamelist>
<parameterdescription>
<para>The AI services value of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="860" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1434" bodyend="1449"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ad7e4619ec2bda85957c6fef4e06afda3" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordSound</definition>
        <argsstring>(const char *sound) noexcept</argsstring>
        <name>SetRecordSound</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordSound</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Set the sound of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>The sound of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="869" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1451" bodyend="1466"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a9bc309d0c8280cd2e5a5710a6724935e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordVolume</definition>
        <argsstring>(double volume) noexcept</argsstring>
        <name>SetRecordVolume</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordVolume</qualifiedname>
        <param>
          <type>double</type>
          <declname>volume</declname>
        </param>
        <briefdescription>
<para>Set the volume of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>The volume of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="878" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1468" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aae1c85e8a3377d89cdc3c6e6a74a04b3" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordMinRange</definition>
        <argsstring>(double minRange) noexcept</argsstring>
        <name>SetRecordMinRange</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordMinRange</qualifiedname>
        <param>
          <type>double</type>
          <declname>minRange</declname>
        </param>
        <briefdescription>
<para>Set the minimum range of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minRange</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum range of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="887" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1483" bodyend="1496"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1adc8468b2978c270c8034de6a3c34b4a6" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordMaxRange</definition>
        <argsstring>(double maxRange) noexcept</argsstring>
        <name>SetRecordMaxRange</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordMaxRange</qualifiedname>
        <param>
          <type>double</type>
          <declname>maxRange</declname>
        </param>
        <briefdescription>
<para>Set the maximum range of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxRange</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum range of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="896" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1498" bodyend="1511"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a9cade036985a2457a03cb9fd88ef81ed" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordOpenSound</definition>
        <argsstring>(const char *sound) noexcept</argsstring>
        <name>SetRecordOpenSound</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordOpenSound</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Set the opening sound of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>The opening sound of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="905" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1513" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a2d7a24055591f936a5779ed327c2ef37" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordCloseSound</definition>
        <argsstring>(const char *sound) noexcept</argsstring>
        <name>SetRecordCloseSound</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordCloseSound</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Set the closing sound of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>The closing sound of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="914" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1528" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a94a92d32803b7c8050a44f657e68ff1f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordScriptText</definition>
        <argsstring>(const char *scriptText) noexcept</argsstring>
        <name>SetRecordScriptText</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordScriptText</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>scriptText</declname>
        </param>
        <briefdescription>
<para>Set the script text of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scriptText</parametername>
</parameternamelist>
<parameterdescription>
<para>The script text of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="923" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1543" bodyend="1556"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a408c96f9c595f788a420b5e54634b02f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordIntegerVariable</definition>
        <argsstring>(int intVar) noexcept</argsstring>
        <name>SetRecordIntegerVariable</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordIntegerVariable</qualifiedname>
        <param>
          <type>int</type>
          <declname>intVar</declname>
        </param>
        <briefdescription>
<para>Set the integer variable of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intVar</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer variable of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="932" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1558" bodyend="1572"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ac82dc9fa615678261dae87e4b03b2f62" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordFloatVariable</definition>
        <argsstring>(double floatVar) noexcept</argsstring>
        <name>SetRecordFloatVariable</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordFloatVariable</qualifiedname>
        <param>
          <type>double</type>
          <declname>floatVar</declname>
        </param>
        <briefdescription>
<para>Set the float variable of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>floatVar</parametername>
</parameternamelist>
<parameterdescription>
<para>The float variable of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="941" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1574" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a15db0e1a6ec120842d3196dcd3cd9dba" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordStringVariable</definition>
        <argsstring>(const char *stringVar) noexcept</argsstring>
        <name>SetRecordStringVariable</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordStringVariable</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>stringVar</declname>
        </param>
        <briefdescription>
<para>Set the string variable of the temporary record stored on the server for the currently specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stringVar</parametername>
</parameternamelist>
<parameterdescription>
<para>The string variable of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="950" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1590" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ae733cbc1fc3aceb5c481bc92a8fd28a9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordIdByIndex</definition>
        <argsstring>(unsigned int index, const char *id) noexcept</argsstring>
        <name>SetRecordIdByIndex</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordIdByIndex</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the id of the record at a certain index in the records stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>When resending a received RecordsDynamic packet, this allows you to set the server-generated id of a record without having to clear and recreate the packet.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="962" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1606" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a5cee064dfe62fe7589a1b3591f741ca2" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEnchantmentIdByIndex</definition>
        <argsstring>(unsigned int index, const char *enchantmentId) noexcept</argsstring>
        <name>SetRecordEnchantmentIdByIndex</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEnchantmentIdByIndex</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enchantmentId</declname>
        </param>
        <briefdescription>
<para>Set the enchantment id of the record at a certain index in the records stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>When resending a received RecordsDynamic packet, this allows you to set the server-generated enchantment id of a record without having to clear and recreate the packet.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enchantmentId</parametername>
</parameternamelist>
<parameterdescription>
<para>The enchantment id of the record. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="975" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1628" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a28db9ebd0b310be21c535b58006b89e3" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectId</definition>
        <argsstring>(unsigned int effectId) noexcept</argsstring>
        <name>SetRecordEffectId</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>effectId</declname>
        </param>
        <briefdescription>
<para>Set the ID of the temporary effect stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>effectId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="983" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1644" bodyend="1647"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a831617cd46683c2afcdf8c86763033a1" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectAttribute</definition>
        <argsstring>(int attributeId) noexcept</argsstring>
        <name>SetRecordEffectAttribute</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectAttribute</qualifiedname>
        <param>
          <type>int</type>
          <declname>attributeId</declname>
        </param>
        <briefdescription>
<para>Set the ID of the attribute modified by the temporary effect stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attributeId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the attribute. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="992" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1649" bodyend="1652"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a47d3606a47cd243a4d6f77d0be74eff0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectSkill</definition>
        <argsstring>(int skillId) noexcept</argsstring>
        <name>SetRecordEffectSkill</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectSkill</qualifiedname>
        <param>
          <type>int</type>
          <declname>skillId</declname>
        </param>
        <briefdescription>
<para>Set the ID of the skill modified by the temporary effect stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>skillId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the skill. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1001" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1654" bodyend="1657"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a8fe3586687a1757b2d0cccf8e2ed7580" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectRangeType</definition>
        <argsstring>(unsigned int rangeType) noexcept</argsstring>
        <name>SetRecordEffectRangeType</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectRangeType</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>rangeType</declname>
        </param>
        <briefdescription>
<para>Set the range type of the temporary effect stored on the server (0 for self, 1 for touch, 2 for target). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rangeType</parametername>
</parameternamelist>
<parameterdescription>
<para>The range type of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1010" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1659" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aed05d168cd1caef4fc0afbf34ae687de" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectArea</definition>
        <argsstring>(int area) noexcept</argsstring>
        <name>SetRecordEffectArea</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectArea</qualifiedname>
        <param>
          <type>int</type>
          <declname>area</declname>
        </param>
        <briefdescription>
<para>Set the area of the temporary effect stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>The area of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1018" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1664" bodyend="1667"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ac27346c5778cf3cd30ab31e0d0e82fc5" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectDuration</definition>
        <argsstring>(int duration) noexcept</argsstring>
        <name>SetRecordEffectDuration</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectDuration</qualifiedname>
        <param>
          <type>int</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
<para>Set the duration of the temporary effect stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1026" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1669" bodyend="1672"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1aff82080fa7c7027e6d0e9d9258e63880" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectMagnitudeMax</definition>
        <argsstring>(int magnitudeMax) noexcept</argsstring>
        <name>SetRecordEffectMagnitudeMax</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectMagnitudeMax</qualifiedname>
        <param>
          <type>int</type>
          <declname>magnitudeMax</declname>
        </param>
        <briefdescription>
<para>Set the maximum magnitude of the temporary effect stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>magnitudeMax</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum magnitude of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1034" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1674" bodyend="1677"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1af946c691cccccdeab194f53b2c4f5d30" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordEffectMagnitudeMin</definition>
        <argsstring>(int magnitudeMin) noexcept</argsstring>
        <name>SetRecordEffectMagnitudeMin</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordEffectMagnitudeMin</qualifiedname>
        <param>
          <type>int</type>
          <declname>magnitudeMin</declname>
        </param>
        <briefdescription>
<para>Set the minimum magnitude of the temporary effect stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>magnitudeMin</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum magnitude of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1042" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1679" bodyend="1682"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ad3ff5d7550420d40d2d6d34195a8dbe9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordBodyPartType</definition>
        <argsstring>(unsigned int partType) noexcept</argsstring>
        <name>SetRecordBodyPartType</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordBodyPartType</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>partType</declname>
        </param>
        <briefdescription>
<para>Set the body part type of the temporary body part stored on the server (which then needs to be added to ARMOR or CLOTHING records) or set the body part type of the current record if it&apos;s a BODYPART. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the body part. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1052" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1684" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a6a7a602592d1db434bf635c7d4e6cb6f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordBodyPartIdForMale</definition>
        <argsstring>(const char *partId) noexcept</argsstring>
        <name>SetRecordBodyPartIdForMale</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordBodyPartIdForMale</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>partId</declname>
        </param>
        <briefdescription>
<para>Set the id of the male version of the temporary body part stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the body part. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1061" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1697" bodyend="1700"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a52053a1d340684a377a720cf08ba05b4" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordBodyPartIdForFemale</definition>
        <argsstring>(const char *partId) noexcept</argsstring>
        <name>SetRecordBodyPartIdForFemale</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordBodyPartIdForFemale</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>partId</declname>
        </param>
        <briefdescription>
<para>Set the id of the female version of the temporary body part stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the body part. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1070" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1702" bodyend="1705"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a000d029cc1812c2fb1685106cbab9225" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordInventoryItemId</definition>
        <argsstring>(const char *itemId) noexcept</argsstring>
        <name>SetRecordInventoryItemId</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordInventoryItemId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>itemId</declname>
        </param>
        <briefdescription>
<para>Set the id of the of the temporary inventory item stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itemId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the inventory item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1078" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1707" bodyend="1710"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a3e05fc0ec74209403b6ef4e6ef857e63" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SetRecordInventoryItemCount</definition>
        <argsstring>(unsigned int count) noexcept</argsstring>
        <name>SetRecordInventoryItemCount</name>
        <qualifiedname>RecordsDynamicFunctions::SetRecordInventoryItemCount</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Set the count of the of the temporary inventory item stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The count of the inventory item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1086" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1712" bodyend="1715"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a80421e6914fb0356cd5858dc109b958f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::AddRecord</definition>
        <argsstring>() noexcept</argsstring>
        <name>AddRecord</name>
        <qualifiedname>RecordsDynamicFunctions::AddRecord</qualifiedname>
        <briefdescription>
<para>Add a copy of the server&apos;s temporary record of the current specified type to the stored records. </para>
        </briefdescription>
        <detaileddescription>
<para>In the process, the server&apos;s temporary record will automatically be cleared so a new one can be set up.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1097" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1717" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a691d020cfafac53f0bd3c4e57fddfe56" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::AddRecordEffect</definition>
        <argsstring>() noexcept</argsstring>
        <name>AddRecordEffect</name>
        <qualifiedname>RecordsDynamicFunctions::AddRecordEffect</qualifiedname>
        <briefdescription>
<para>Add a copy of the server&apos;s temporary effect to the temporary record of the current specified type. </para>
        </briefdescription>
        <detaileddescription>
<para>In the process, the server&apos;s temporary effect will automatically be cleared so a new one can be set up.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1108" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1875" bodyend="1905"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1ae918bed831abbd828e1def940120d8b0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::AddRecordBodyPart</definition>
        <argsstring>() noexcept</argsstring>
        <name>AddRecordBodyPart</name>
        <qualifiedname>RecordsDynamicFunctions::AddRecordBodyPart</qualifiedname>
        <briefdescription>
<para>Add a copy of the server&apos;s temporary body part to the temporary record of the current specified type. </para>
        </briefdescription>
        <detaileddescription>
<para>In the process, the server&apos;s temporary body part will automatically be cleared so a new one can be set up.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1119" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1907" bodyend="1918"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a875d9a7313d1c790d3908d2b21449951" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::AddRecordInventoryItem</definition>
        <argsstring>() noexcept</argsstring>
        <name>AddRecordInventoryItem</name>
        <qualifiedname>RecordsDynamicFunctions::AddRecordInventoryItem</qualifiedname>
        <briefdescription>
<para>Add a copy of the server&apos;s temporary inventory item to the temporary record of the current specified type. </para>
        </briefdescription>
        <detaileddescription>
<para>In the process, the server&apos;s temporary inventory item will automatically be cleared so a new one can be set up.</para>
<para>Note: Any items added this way will be ignored if the record already has a valid inventoryBaseId.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1133" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1920" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="class_records_dynamic_functions_1a32555e12670f1a924121695c5e7e1334" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RecordsDynamicFunctions::SendRecordDynamic</definition>
        <argsstring>(unsigned short pid, bool sendToOtherPlayers, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendRecordDynamic</name>
        <qualifiedname>RecordsDynamicFunctions::SendRecordDynamic</qualifiedname>
        <param>
          <type>unsigned short</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sendToOtherPlayers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send a RecordDynamic packet with the current specified record type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The player ID attached to the packet. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sendToOtherPlayers</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to players other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="1145" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.cpp" bodystart="1935" bodyend="1949"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" line="141" column="1" bodyfile="src/apps/openmw-mp/Script/Functions/RecordsDynamic.hpp" bodystart="142" bodyend="1147"/>
    <listofallmembers>
      <member refid="class_records_dynamic_functions_1a80421e6914fb0356cd5858dc109b958f" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>AddRecord</name></member>
      <member refid="class_records_dynamic_functions_1ae918bed831abbd828e1def940120d8b0" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>AddRecordBodyPart</name></member>
      <member refid="class_records_dynamic_functions_1a691d020cfafac53f0bd3c4e57fddfe56" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>AddRecordEffect</name></member>
      <member refid="class_records_dynamic_functions_1a875d9a7313d1c790d3908d2b21449951" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>AddRecordInventoryItem</name></member>
      <member refid="class_records_dynamic_functions_1a55f675eaac2b1de74aa34cee11575824" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>ClearRecords</name></member>
      <member refid="class_records_dynamic_functions_1ad2e52af30a89ee2c317375b468562336" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordAutoCalc</name></member>
      <member refid="class_records_dynamic_functions_1a940aee2753fa4f05f3562f196b384517" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordBaseId</name></member>
      <member refid="class_records_dynamic_functions_1a72aa5ddab64a44f4f6fbb7c86dff4ad6" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordCharge</name></member>
      <member refid="class_records_dynamic_functions_1afa7e21244b6d4cc7e96a53f66c977018" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordCost</name></member>
      <member refid="class_records_dynamic_functions_1a33d0ebbd8e634d3736005a3c98df77de" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordCount</name></member>
      <member refid="class_records_dynamic_functions_1acbd660bd430bd3cd8fa5bac0be32e4f0" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectArea</name></member>
      <member refid="class_records_dynamic_functions_1a859ce33dc90e7c94d3a76191102b23b9" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectAttribute</name></member>
      <member refid="class_records_dynamic_functions_1a3eb8ad54707bd4e153d6fe3e231bc024" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectCount</name></member>
      <member refid="class_records_dynamic_functions_1a7b1e9ba17b20ec841a748e836e72c65e" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectDuration</name></member>
      <member refid="class_records_dynamic_functions_1a6b265a6597a04628bfc27315c4126490" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectId</name></member>
      <member refid="class_records_dynamic_functions_1adbb4e2dde82b908b776f966b749ec1c8" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectMagnitudeMax</name></member>
      <member refid="class_records_dynamic_functions_1a1e12ba58233b4d4f11556d3ac2157868" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectMagnitudeMin</name></member>
      <member refid="class_records_dynamic_functions_1ab99501eac7cf206f19afea0dde821077" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectRangeType</name></member>
      <member refid="class_records_dynamic_functions_1a4e470e4e127380e8ff5236aac4736b6d" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEffectSkill</name></member>
      <member refid="class_records_dynamic_functions_1a2762225f4d1998d8d0e0baae25a85c9e" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEnchantmentCharge</name></member>
      <member refid="class_records_dynamic_functions_1a1fc720583293c03f5f2c2977b567ef47" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordEnchantmentId</name></member>
      <member refid="class_records_dynamic_functions_1a19e9638a7a585556b3137d067aa72858" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordFlags</name></member>
      <member refid="class_records_dynamic_functions_1a7d41119123fc6f912a443ba646fe6778" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordIcon</name></member>
      <member refid="class_records_dynamic_functions_1adac3701d0a85aa62f4551b192fce78fa" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordId</name></member>
      <member refid="class_records_dynamic_functions_1a45e86cd6855162583b32992b0a296451" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordModel</name></member>
      <member refid="class_records_dynamic_functions_1af37d21a08ddc03977383dd0344b97b92" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordName</name></member>
      <member refid="class_records_dynamic_functions_1a23a8dfb11c35adab4e6adc7c1186b7db" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordQuantity</name></member>
      <member refid="class_records_dynamic_functions_1a2e037adfa890e4f09c4ae5bfbdc531cf" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordScript</name></member>
      <member refid="class_records_dynamic_functions_1a6f60bf66bebda36ab7f9efa4baac5f22" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordSubtype</name></member>
      <member refid="class_records_dynamic_functions_1ae9e8035a077cd616d12af24181bc34a1" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordType</name></member>
      <member refid="class_records_dynamic_functions_1a6c8391a548217ed36557d2748db0a606" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordValue</name></member>
      <member refid="class_records_dynamic_functions_1a9ef313fe4d0507801e423b69e1dc567b" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>GetRecordWeight</name></member>
      <member refid="class_records_dynamic_functions_1a32555e12670f1a924121695c5e7e1334" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SendRecordDynamic</name></member>
      <member refid="class_records_dynamic_functions_1ad33284940be0d3150c82093b649ca114" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordAIAlarm</name></member>
      <member refid="class_records_dynamic_functions_1a9237ec006a1291aea740dae04d618803" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordAIFight</name></member>
      <member refid="class_records_dynamic_functions_1a0d3cf7bd18f0eef24c3eb83dfb477d93" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordAIFlee</name></member>
      <member refid="class_records_dynamic_functions_1a9bb5c49b3e5ca8f7abf8db29f55eb200" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordAIServices</name></member>
      <member refid="class_records_dynamic_functions_1aaa54aebf2e59c23822dfc2078c6efc6e" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordArmorRating</name></member>
      <member refid="class_records_dynamic_functions_1a1602ed9a7638e408f0651d4670f1d799" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordAutoCalc</name></member>
      <member refid="class_records_dynamic_functions_1a97c48214579d21427452bdd515776bd8" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordBaseId</name></member>
      <member refid="class_records_dynamic_functions_1a9c31a0a7281db0a702187170c7edc3d4" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordBloodType</name></member>
      <member refid="class_records_dynamic_functions_1a52053a1d340684a377a720cf08ba05b4" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordBodyPartIdForFemale</name></member>
      <member refid="class_records_dynamic_functions_1a6a7a602592d1db434bf635c7d4e6cb6f" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordBodyPartIdForMale</name></member>
      <member refid="class_records_dynamic_functions_1ad3ff5d7550420d40d2d6d34195a8dbe9" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordBodyPartType</name></member>
      <member refid="class_records_dynamic_functions_1a6bde9d1d6ec67c54299298eb958f45ec" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordCharge</name></member>
      <member refid="class_records_dynamic_functions_1a45d9dd24515a2688a751de5f439f86aa" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordClass</name></member>
      <member refid="class_records_dynamic_functions_1a2d7a24055591f936a5779ed327c2ef37" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordCloseSound</name></member>
      <member refid="class_records_dynamic_functions_1a84d86b7d85660bbe67fd59fc0382d0c5" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordColor</name></member>
      <member refid="class_records_dynamic_functions_1aa32bd40b1a851b47f5d723e42f3bfb0a" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordCost</name></member>
      <member refid="class_records_dynamic_functions_1a477d85abd9abdc96fe1097bfec3d7677" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordDamageChop</name></member>
      <member refid="class_records_dynamic_functions_1a91bee124525272ae91d09dc01a10d18a" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordDamageSlash</name></member>
      <member refid="class_records_dynamic_functions_1a2d506e1511dbd5948cf819a85bb03c36" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordDamageThrust</name></member>
      <member refid="class_records_dynamic_functions_1aed05d168cd1caef4fc0afbf34ae687de" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectArea</name></member>
      <member refid="class_records_dynamic_functions_1a831617cd46683c2afcdf8c86763033a1" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectAttribute</name></member>
      <member refid="class_records_dynamic_functions_1ac27346c5778cf3cd30ab31e0d0e82fc5" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectDuration</name></member>
      <member refid="class_records_dynamic_functions_1a28db9ebd0b310be21c535b58006b89e3" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectId</name></member>
      <member refid="class_records_dynamic_functions_1aff82080fa7c7027e6d0e9d9258e63880" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectMagnitudeMax</name></member>
      <member refid="class_records_dynamic_functions_1af946c691cccccdeab194f53b2c4f5d30" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectMagnitudeMin</name></member>
      <member refid="class_records_dynamic_functions_1a8fe3586687a1757b2d0cccf8e2ed7580" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectRangeType</name></member>
      <member refid="class_records_dynamic_functions_1a47d3606a47cd243a4d6f77d0be74eff0" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEffectSkill</name></member>
      <member refid="class_records_dynamic_functions_1af4755706ce8a3809dfbc94fb0f5dec3a" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEnchantmentCharge</name></member>
      <member refid="class_records_dynamic_functions_1aa4ff09994ca90d7ac31ad28048b6943f" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEnchantmentId</name></member>
      <member refid="class_records_dynamic_functions_1a5cee064dfe62fe7589a1b3591f741ca2" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordEnchantmentIdByIndex</name></member>
      <member refid="class_records_dynamic_functions_1a559d817672e12f2f118dcf44d71358a7" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordFaction</name></member>
      <member refid="class_records_dynamic_functions_1a2d7a6ffb0df1222eaa380fcfe6554a4f" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordFatigue</name></member>
      <member refid="class_records_dynamic_functions_1a929e0e63ad523189b59789174be1d969" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordFlags</name></member>
      <member refid="class_records_dynamic_functions_1ac82dc9fa615678261dae87e4b03b2f62" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordFloatVariable</name></member>
      <member refid="class_records_dynamic_functions_1aab3d3757e7ee5374ce2dc0c678412989" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordGender</name></member>
      <member refid="class_records_dynamic_functions_1a275cbc77cacedf826821e2cc941dd6fe" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordHair</name></member>
      <member refid="class_records_dynamic_functions_1a6d154670bfa5b826fdae81fccbd843d9" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordHead</name></member>
      <member refid="class_records_dynamic_functions_1a63bcea217ee8486818fec2ca06adf91c" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordHealth</name></member>
      <member refid="class_records_dynamic_functions_1aef20414580516fcd12240aaec0cdec00" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordIcon</name></member>
      <member refid="class_records_dynamic_functions_1aa27a0ccd062643a8b866cc3f429d8e0c" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordId</name></member>
      <member refid="class_records_dynamic_functions_1ae733cbc1fc3aceb5c481bc92a8fd28a9" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordIdByIndex</name></member>
      <member refid="class_records_dynamic_functions_1a408c96f9c595f788a420b5e54634b02f" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordIntegerVariable</name></member>
      <member refid="class_records_dynamic_functions_1afd4bb55a4371bc35f003f1e9aff4fb68" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordInventoryBaseId</name></member>
      <member refid="class_records_dynamic_functions_1a3e05fc0ec74209403b6ef4e6ef857e63" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordInventoryItemCount</name></member>
      <member refid="class_records_dynamic_functions_1a000d029cc1812c2fb1685106cbab9225" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordInventoryItemId</name></member>
      <member refid="class_records_dynamic_functions_1a33c7ba8b0bb863dd07e9ae2538633eb7" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordKeyState</name></member>
      <member refid="class_records_dynamic_functions_1aa792f6436dc2a6011dc2a17a55804f12" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordLevel</name></member>
      <member refid="class_records_dynamic_functions_1a2c733fd3c12a15d77ebcff7bfe7142e4" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordMagicka</name></member>
      <member refid="class_records_dynamic_functions_1adc8468b2978c270c8034de6a3c34b4a6" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordMaxRange</name></member>
      <member refid="class_records_dynamic_functions_1aae1c85e8a3377d89cdc3c6e6a74a04b3" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordMinRange</name></member>
      <member refid="class_records_dynamic_functions_1aa4b66cbd10689122eb7dde723c31dc89" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordModel</name></member>
      <member refid="class_records_dynamic_functions_1a409f1096718620b4d70cbce65c6ce5d2" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordName</name></member>
      <member refid="class_records_dynamic_functions_1a9cade036985a2457a03cb9fd88ef81ed" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordOpenSound</name></member>
      <member refid="class_records_dynamic_functions_1ac43ad905dd428ee3eba0663bfbf3c8ba" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordQuality</name></member>
      <member refid="class_records_dynamic_functions_1a40bf70d5b486642ed9baa33019bfdc63" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordRace</name></member>
      <member refid="class_records_dynamic_functions_1ad53bae9ac709a2ab1857a90d0825e68a" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordRadius</name></member>
      <member refid="class_records_dynamic_functions_1a2735e1bbc3c68a3bdfb13a7007dda94d" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordReach</name></member>
      <member refid="class_records_dynamic_functions_1a1e58bec8cbcc5ad21931af18f766b581" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordScale</name></member>
      <member refid="class_records_dynamic_functions_1a120642cb42a4ed4254e13d39c8f9be8b" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordScript</name></member>
      <member refid="class_records_dynamic_functions_1a94a92d32803b7c8050a44f657e68ff1f" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordScriptText</name></member>
      <member refid="class_records_dynamic_functions_1a70ea6f3782ef7a0f80ee9c7a801956cb" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordScrollState</name></member>
      <member refid="class_records_dynamic_functions_1aec2d2b092b5161d127cf2a63d8f84bb9" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordSkillId</name></member>
      <member refid="class_records_dynamic_functions_1a23c78194543b869a9aca8a49d35f0881" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordSoulValue</name></member>
      <member refid="class_records_dynamic_functions_1ad7e4619ec2bda85957c6fef4e06afda3" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordSound</name></member>
      <member refid="class_records_dynamic_functions_1a1c22e5d5e81bf66d3457d50778d5fcb0" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordSpeed</name></member>
      <member refid="class_records_dynamic_functions_1a15db0e1a6ec120842d3196dcd3cd9dba" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordStringVariable</name></member>
      <member refid="class_records_dynamic_functions_1a171323e896490838adf5b476ca8a5307" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordSubtype</name></member>
      <member refid="class_records_dynamic_functions_1aa86a4ca966f920c3dbe92cc8931e8943" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordText</name></member>
      <member refid="class_records_dynamic_functions_1a20e07d8db4249b7b60c314fa80d9bfbc" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordTime</name></member>
      <member refid="class_records_dynamic_functions_1a188d0a0fb4e0af73dcc74ab40bc7018d" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordType</name></member>
      <member refid="class_records_dynamic_functions_1a169e79e3beed5e140b1402d258eb3d6f" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordUses</name></member>
      <member refid="class_records_dynamic_functions_1a5431a07ca410a81e2ebfb20748e48ec2" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordValue</name></member>
      <member refid="class_records_dynamic_functions_1a6bef67b71238f3b397306b573aaf8e96" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordVampireState</name></member>
      <member refid="class_records_dynamic_functions_1a9bc309d0c8280cd2e5a5710a6724935e" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordVolume</name></member>
      <member refid="class_records_dynamic_functions_1a41c45282b5f246b5170aace38cf06f8e" prot="public" virt="non-virtual"><scope>RecordsDynamicFunctions</scope><name>SetRecordWeight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
