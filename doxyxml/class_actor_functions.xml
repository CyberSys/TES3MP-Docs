<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_actor_functions" kind="class" language="C++" prot="public">
    <compoundname>ActorFunctions</compoundname>
    <includes refid="_actors_8hpp" local="no">Actors.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_actor_functions_1a00028c7774b0517485dc1b97b84e5f2a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::ReadReceivedActorList</definition>
        <argsstring>() noexcept</argsstring>
        <name>ReadReceivedActorList</name>
        <qualifiedname>ActorFunctions::ReadReceivedActorList</qualifiedname>
        <briefdescription>
<para>Use the last actor list received by the server as the one being read. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="141" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a48dcba7ee0bd36e449b0f849e623485d" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::ReadCellActorList</definition>
        <argsstring>(const char *cellDescription) noexcept</argsstring>
        <name>ReadCellActorList</name>
        <qualifiedname>ActorFunctions::ReadCellActorList</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>cellDescription</declname>
        </param>
        <briefdescription>
<para>Use the temporary actor list stored for a cell as the one being read. </para>
        </briefdescription>
        <detaileddescription>
<para>This type of actor list is used to store actor positions and dynamic stats and is deleted when the cell is unloaded.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellDescription</parametername>
</parameternamelist>
<parameterdescription>
<para>The description of the cell whose actor list should be read. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="152" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a5183f07b08b2293440abf55df33ea5eb" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::ClearActorList</definition>
        <argsstring>() noexcept</argsstring>
        <name>ClearActorList</name>
        <qualifiedname>ActorFunctions::ClearActorList</qualifiedname>
        <briefdescription>
<para>Clear the data from the actor list stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="159" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1aab5588e100338fbfe3433b7336520317" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorListPid</definition>
        <argsstring>(unsigned short pid) noexcept</argsstring>
        <name>SetActorListPid</name>
        <qualifiedname>ActorFunctions::SetActorListPid</qualifiedname>
        <param>
          <type>unsigned short</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Set the pid attached to the ActorList. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The player ID to whom the actor list should be attached. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="167" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a86ab8e7c879000379315d0d988f6f54c" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::CopyReceivedActorListToStore</definition>
        <argsstring>() noexcept</argsstring>
        <name>CopyReceivedActorListToStore</name>
        <qualifiedname>ActorFunctions::CopyReceivedActorListToStore</qualifiedname>
        <briefdescription>
<para>Take the contents of the read-only actor list last received by the server from a player and move its contents to the stored object list that can be sent by the server. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="176" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1aa7c681f1756c17c35be4b612c5aad3d1" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorListSize</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetActorListSize</name>
        <qualifiedname>ActorFunctions::GetActorListSize</qualifiedname>
        <briefdescription>
<para>Get the number of indexes in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of indexes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="183" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8a2f1ea7c777f44d0a5ddd9e8e35ae1d" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char ActorFunctions::GetActorListAction</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetActorListAction</name>
        <qualifiedname>ActorFunctions::GetActorListAction</qualifiedname>
        <briefdescription>
<para>Get the action type used in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The action type (0 for SET, 1 for ADD, 2 for REMOVE, 3 for REQUEST). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="190" column="26" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a35098cfd190882887670d3e622143c2d" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorCell</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorCell</name>
        <qualifiedname>ActorFunctions::GetActorCell</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the cell description of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The cell description. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="198" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a1fd9d2a7b385225cc696f34b8db60c57" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorRefId</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorRefId</name>
        <qualifiedname>ActorFunctions::GetActorRefId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the refId of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The refId. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="206" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a3bf86ca07dd2aa12a0762562fd494211" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorRefNum</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorRefNum</name>
        <qualifiedname>ActorFunctions::GetActorRefNum</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the refNum of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The refNum. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="214" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1aa608a1be9dbb84573abc51f21e416296" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorMpNum</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorMpNum</name>
        <qualifiedname>ActorFunctions::GetActorMpNum</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the mpNum of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mpNum. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="222" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad1c670bfeb76cbb43ea65a812100e3a8" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorPosX</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorPosX</name>
        <qualifiedname>ActorFunctions::GetActorPosX</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the X position of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The X position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="230" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a9fed70eb8bb6d8b51fbaaa5e67b071b6" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorPosY</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorPosY</name>
        <qualifiedname>ActorFunctions::GetActorPosY</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the Y position of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Y position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="238" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a35396540235173c1c046b61f8586380f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorPosZ</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorPosZ</name>
        <qualifiedname>ActorFunctions::GetActorPosZ</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the Z position of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Z position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="246" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a9f746024df5a25ec60d2d42be09392a7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorRotX</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorRotX</name>
        <qualifiedname>ActorFunctions::GetActorRotX</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the X rotation of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The X rotation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="254" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1aa7c663e9fff0b197085ce262bc1db41f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorRotY</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorRotY</name>
        <qualifiedname>ActorFunctions::GetActorRotY</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the Y rotation of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Y rotation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="262" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8e9cdf9ac405ae6b70b0e7eb95b72949" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorRotZ</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorRotZ</name>
        <qualifiedname>ActorFunctions::GetActorRotZ</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the Z rotation of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Z rotation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="270" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad5fc0beac4ed24944d06c6894cdf5dc5" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorHealthBase</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorHealthBase</name>
        <qualifiedname>ActorFunctions::GetActorHealthBase</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the base health of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The base health. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="278" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a428f0d1b72ea040040f288c006827c78" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorHealthCurrent</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorHealthCurrent</name>
        <qualifiedname>ActorFunctions::GetActorHealthCurrent</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the current health of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current health. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="286" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1af6988c34f73e5815b6b2bbf8995e4037" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorHealthModified</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorHealthModified</name>
        <qualifiedname>ActorFunctions::GetActorHealthModified</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the modified health of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified health. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="294" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a979e56e23da4bd93cef00dda25d46243" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorMagickaBase</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorMagickaBase</name>
        <qualifiedname>ActorFunctions::GetActorMagickaBase</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the base magicka of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The base magicka. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="302" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a9417a1ec1cd234f9b663c4385fbe14f1" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorMagickaCurrent</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorMagickaCurrent</name>
        <qualifiedname>ActorFunctions::GetActorMagickaCurrent</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the current magicka of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current magicka. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="310" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ae958ddf5fbe051e822e2821b53352c4a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorMagickaModified</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorMagickaModified</name>
        <qualifiedname>ActorFunctions::GetActorMagickaModified</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the modified magicka of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified magicka. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="318" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad46cb4af8bc7124b49f9598898dc0f00" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorFatigueBase</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorFatigueBase</name>
        <qualifiedname>ActorFunctions::GetActorFatigueBase</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the base fatigue of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The base fatigue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="326" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a63214d669d5d3e36b2ffdc33f7560448" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorFatigueCurrent</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorFatigueCurrent</name>
        <qualifiedname>ActorFunctions::GetActorFatigueCurrent</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the current fatigue of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current fatigue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="334" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a92a8e0180fd353abbed4f36e8ad5c3d9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorFatigueModified</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorFatigueModified</name>
        <qualifiedname>ActorFunctions::GetActorFatigueModified</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the modified fatigue of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified fatigue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="342" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ae57564b8cc53b2b9d21d9246834b9232" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorEquipmentItemRefId</definition>
        <argsstring>(unsigned int index, unsigned short slot) noexcept</argsstring>
        <name>GetActorEquipmentItemRefId</name>
        <qualifiedname>ActorFunctions::GetActorEquipmentItemRefId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Get the refId of the item in a certain slot of the equipment of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the equipment item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The refId. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="352" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad902ffea43fdc23d781c5a8271d38a2f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ActorFunctions::GetActorEquipmentItemCount</definition>
        <argsstring>(unsigned int index, unsigned short slot) noexcept</argsstring>
        <name>GetActorEquipmentItemCount</name>
        <qualifiedname>ActorFunctions::GetActorEquipmentItemCount</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Get the count of the item in a certain slot of the equipment of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the equipment item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The item count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="362" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a01c726a78df90871e15413d9596c91aa" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ActorFunctions::GetActorEquipmentItemCharge</definition>
        <argsstring>(unsigned int index, unsigned short slot) noexcept</argsstring>
        <name>GetActorEquipmentItemCharge</name>
        <qualifiedname>ActorFunctions::GetActorEquipmentItemCharge</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Get the charge of the item in a certain slot of the equipment of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the equipment item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The charge. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="372" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a692a856b03f1b23f3f29392978df1d1e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorEquipmentItemEnchantmentCharge</definition>
        <argsstring>(unsigned int index, unsigned short slot) noexcept</argsstring>
        <name>GetActorEquipmentItemEnchantmentCharge</name>
        <qualifiedname>ActorFunctions::GetActorEquipmentItemEnchantmentCharge</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Get the enchantment charge of the item in a certain slot of the equipment of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The slot of the equipment item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The enchantment charge. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="382" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a13efdece02432ef55a705e1c619a8437" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActorFunctions::DoesActorHavePlayerKiller</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>DoesActorHavePlayerKiller</name>
        <qualifiedname>ActorFunctions::DoesActorHavePlayerKiller</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check whether the killer of the actor at a certain index in the read actor list is a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether the actor was killed by a player. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="390" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a2b96df935c5076c53770ebd75a862481" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ActorFunctions::GetActorKillerPid</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorKillerPid</name>
        <qualifiedname>ActorFunctions::GetActorKillerPid</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the player ID of the killer of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The player ID of the killer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="398" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1add106b61e3217ac1714ee08146edad41" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorKillerRefId</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorKillerRefId</name>
        <qualifiedname>ActorFunctions::GetActorKillerRefId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the refId of the actor killer of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The refId of the killer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="406" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a5cd346bdb9565b0b37373dc100309927" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorKillerRefNum</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorKillerRefNum</name>
        <qualifiedname>ActorFunctions::GetActorKillerRefNum</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the refNum of the actor killer of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The refNum of the killer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="414" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8426ef0013b0b1414a758b974076e392" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorKillerMpNum</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorKillerMpNum</name>
        <qualifiedname>ActorFunctions::GetActorKillerMpNum</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the mpNum of the actor killer of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mpNum of the killer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="422" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ac6ea366af0650045fdc12e8bfb752276" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorKillerName</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorKillerName</name>
        <qualifiedname>ActorFunctions::GetActorKillerName</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the name of the actor killer of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The name of the killer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="430" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad921632b26ae31c0c6b97a1555b55986" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorDeathState</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorDeathState</name>
        <qualifiedname>ActorFunctions::GetActorDeathState</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the deathState of the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The deathState. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="438" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8ec9c9865eed7c169394d30f9783143b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorSpellsActiveChangesSize</definition>
        <argsstring>(unsigned int actorIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveChangesSize</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveChangesSize</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <briefdescription>
<para>Get the number of indexes in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of indexes for spells active changes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="446" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a1711f0951e7a3013f2c073fe4940d9eb" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorSpellsActiveChangesAction</definition>
        <argsstring>(unsigned int actorIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveChangesAction</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveChangesAction</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <briefdescription>
<para>Get the action type used in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The action type (0 for SET, 1 for ADD, 2 for REMOVE). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="454" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a0ed5bc6165083be32657a985a6670907" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorSpellsActiveId</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveId</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the spell id at a certain index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The spell id. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="463" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ac795d0f5fa9b335d77c1472c06c09ff7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorSpellsActiveDisplayName</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveDisplayName</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveDisplayName</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the spell display name at a certain index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The spell display name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="472" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a68258d2d17159f666a92564c479f87c4" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActorFunctions::GetActorSpellsActiveStackingState</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveStackingState</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveStackingState</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the spell stacking state at a certain index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The spell stacking state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="481" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1abac628afd5d41e24ea49677acd3c6fe8" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorSpellsActiveEffectCount</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveEffectCount</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveEffectCount</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the number of effects at an index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of effects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="490" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a1476c673b40ee89f3c0c53e938f9759a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorSpellsActiveEffectId</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveEffectId</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveEffectId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the id for an effect index at a spell index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The id of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="500" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a55980d314d76dbe74bd67ef0f6c710e1" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ActorFunctions::GetActorSpellsActiveEffectArg</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveEffectArg</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveEffectArg</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the arg for an effect index at a spell index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The arg of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="510" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a67c2efdd349d2631d2010b56039178fe" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorSpellsActiveEffectMagnitude</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveEffectMagnitude</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveEffectMagnitude</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the magnitude for an effect index at a spell index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The magnitude of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="520" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a1bcb226ff794a1760a6010a83921c416" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorSpellsActiveEffectDuration</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveEffectDuration</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveEffectDuration</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the duration for an effect index at a spell index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The duration of the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="530" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a12c0b32ca1bae6aa2e338be0497f6d0a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ActorFunctions::GetActorSpellsActiveEffectTimeLeft</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex, unsigned int effectIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveEffectTimeLeft</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveEffectTimeLeft</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>effectIndex</declname>
        </param>
        <briefdescription>
<para>Get the time left for an effect index at a spell index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effectIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the effect. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The time left for the effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="540" column="19" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a44a928a0f58b15b9c3b7ad90ba51dac7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActorFunctions::DoesActorSpellsActiveHavePlayerCaster</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>DoesActorSpellsActiveHavePlayerCaster</name>
        <qualifiedname>ActorFunctions::DoesActorSpellsActiveHavePlayerCaster</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Check whether the spell at a certain index in an actor&apos;s latest spells active changes has a player as its caster. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether a player is the caster of the spell. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="550" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8f66807798a4b089c4ad8bba71e99b5f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ActorFunctions::GetActorSpellsActiveCasterPid</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveCasterPid</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveCasterPid</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the player ID of the caster of the spell at a certain index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The player ID of the caster. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="559" column="16" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="288" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad91178f0c8229d9a5d358b149b76055a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ActorFunctions::GetActorSpellsActiveCasterRefId</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveCasterRefId</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveCasterRefId</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the refId of the actor caster of the spell at a certain index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The refId of the caster. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="568" column="23" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a0c5cb30b6547bda969b44055e6e88cf5" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorSpellsActiveCasterRefNum</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveCasterRefNum</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveCasterRefNum</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the refNum of the actor caster of the spell at a certain index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The refNum of the caster. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="577" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1add56d0fea397b3efa2b27cfb0474623a" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorSpellsActiveCasterMpNum</definition>
        <argsstring>(unsigned int actorIndex, unsigned int spellIndex) noexcept</argsstring>
        <name>GetActorSpellsActiveCasterMpNum</name>
        <qualifiedname>ActorFunctions::GetActorSpellsActiveCasterMpNum</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>actorIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>spellIndex</declname>
        </param>
        <briefdescription>
<para>Get the mpNum of the actor caster of the spell at a certain index in an actor&apos;s latest spells active changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actorIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spellIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the spell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The mpNum of the caster. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="586" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a01b3593b9d35f8029c6814db335ffc9b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActorFunctions::DoesActorHavePosition</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>DoesActorHavePosition</name>
        <qualifiedname>ActorFunctions::DoesActorHavePosition</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check whether there is any positional data for the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only useful when reading the actor list data recorded for a particular cell.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether the read actor list contains positional data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="597" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a943254ebc543b693e93fbc0a03dca922" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActorFunctions::DoesActorHaveStatsDynamic</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>DoesActorHaveStatsDynamic</name>
        <qualifiedname>ActorFunctions::DoesActorHaveStatsDynamic</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Check whether there is any dynamic stats data for the actor at a certain index in the read actor list. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only useful when reading the actor list data recorded for a particular cell.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the actor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether the read actor list contains dynamic stats data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="608" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ae489634857ab65f8ee328eb513f75b83" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorListCell</definition>
        <argsstring>(const char *cellDescription) noexcept</argsstring>
        <name>SetActorListCell</name>
        <qualifiedname>ActorFunctions::SetActorListCell</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>cellDescription</declname>
        </param>
        <briefdescription>
<para>Set the cell of the temporary actor list stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>The cell is determined to be an exterior cell if it fits the pattern of a number followed by a comma followed by another number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellDescription</parametername>
</parameternamelist>
<parameterdescription>
<para>The description of the cell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="619" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a20a2d5600f2122f10e0f0a0d19f24b96" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorListAction</definition>
        <argsstring>(unsigned char action) noexcept</argsstring>
        <name>SetActorListAction</name>
        <qualifiedname>ActorFunctions::SetActorListAction</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Set the action type of the temporary actor list stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The action type (0 for SET, 1 for ADD, 2 for REMOVE, 3 for REQUEST). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="627" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a077fada2c7cc2e0090a0ac324a8d5e8d" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorCell</definition>
        <argsstring>(const char *cellDescription) noexcept</argsstring>
        <name>SetActorCell</name>
        <qualifiedname>ActorFunctions::SetActorCell</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>cellDescription</declname>
        </param>
        <briefdescription>
<para>Set the cell of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>Used for ActorCellChange packets, where a specific actor&apos;s cell now differs from that of the actor list.</para>
<para>The cell is determined to be an exterior cell if it fits the pattern of a number followed by a comma followed by another number.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cellDescription</parametername>
</parameternamelist>
<parameterdescription>
<para>The description of the cell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="641" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ac5bfe48631894bae0f6240f139f35587" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorRefId</definition>
        <argsstring>(const char *refId) noexcept</argsstring>
        <name>SetActorRefId</name>
        <qualifiedname>ActorFunctions::SetActorRefId</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>refId</declname>
        </param>
        <briefdescription>
<para>Set the refId of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>refId</parametername>
</parameternamelist>
<parameterdescription>
<para>The refId. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="649" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ae09dc47f9a37341a50ff8515df9f1114" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorRefNum</definition>
        <argsstring>(int refNum) noexcept</argsstring>
        <name>SetActorRefNum</name>
        <qualifiedname>ActorFunctions::SetActorRefNum</qualifiedname>
        <param>
          <type>int</type>
          <declname>refNum</declname>
        </param>
        <briefdescription>
<para>Set the refNum of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>refNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The refNum. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="657" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1adcf658fd068031ce880a00cc5751fcc6" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorMpNum</definition>
        <argsstring>(int mpNum) noexcept</argsstring>
        <name>SetActorMpNum</name>
        <qualifiedname>ActorFunctions::SetActorMpNum</qualifiedname>
        <param>
          <type>int</type>
          <declname>mpNum</declname>
        </param>
        <briefdescription>
<para>Set the mpNum of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The mpNum. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="665" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a0e3603266f330bb0836492eb6270ec94" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorPosition</definition>
        <argsstring>(double x, double y, double z) noexcept</argsstring>
        <name>SetActorPosition</name>
        <qualifiedname>ActorFunctions::SetActorPosition</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Set the position of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The X position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The Y position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The Z position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="675" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="353" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a731727c3a7f8a5dd9975357fc959b63c" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorRotation</definition>
        <argsstring>(double x, double y, double z) noexcept</argsstring>
        <name>SetActorRotation</name>
        <qualifiedname>ActorFunctions::SetActorRotation</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Set the rotation of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The X rotation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The Y rotation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The Z rotation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="685" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="360" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a2a738b6139cf86809df5975f030b7ed9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorHealthBase</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorHealthBase</name>
        <qualifiedname>ActorFunctions::SetActorHealthBase</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the base health of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="693" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ac8e31b0ab7d96e31ebef63090c77cd80" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorHealthCurrent</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorHealthCurrent</name>
        <qualifiedname>ActorFunctions::SetActorHealthCurrent</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the current health of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="701" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a290f37b9dfbd293c49ea6dc4b7e4842c" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorHealthModified</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorHealthModified</name>
        <qualifiedname>ActorFunctions::SetActorHealthModified</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the modified health of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="709" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8b0ae56ad796c58a28c7a459a8e98fbd" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorMagickaBase</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorMagickaBase</name>
        <qualifiedname>ActorFunctions::SetActorMagickaBase</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the base magicka of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="717" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="382" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a233b066ee815d91c708f84055bb5937e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorMagickaCurrent</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorMagickaCurrent</name>
        <qualifiedname>ActorFunctions::SetActorMagickaCurrent</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the current magicka of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="725" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="387" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ae173d516669655519476d14489b6b942" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorMagickaModified</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorMagickaModified</name>
        <qualifiedname>ActorFunctions::SetActorMagickaModified</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the modified magicka of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="733" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad9a7c0351bc57929de28b83ed640c8b3" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorFatigueBase</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorFatigueBase</name>
        <qualifiedname>ActorFunctions::SetActorFatigueBase</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the base fatigue of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="741" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="397" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a44ce9ec02ed6bdc209092a839053b915" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorFatigueCurrent</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorFatigueCurrent</name>
        <qualifiedname>ActorFunctions::SetActorFatigueCurrent</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the current fatigue of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="749" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a24923e0279a769bc3b0937e33142d690" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorFatigueModified</definition>
        <argsstring>(double value) noexcept</argsstring>
        <name>SetActorFatigueModified</name>
        <qualifiedname>ActorFunctions::SetActorFatigueModified</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the modified fatigue of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="757" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a3ac1ed5a1a0e0ec778b4c522d3730bb0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorSound</definition>
        <argsstring>(const char *sound) noexcept</argsstring>
        <name>SetActorSound</name>
        <qualifiedname>ActorFunctions::SetActorSound</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Set the sound of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para>The sound. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="765" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="412" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8fc986d0eb3439fb4710b61222bd6903" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorDeathState</definition>
        <argsstring>(unsigned int deathState) noexcept</argsstring>
        <name>SetActorDeathState</name>
        <qualifiedname>ActorFunctions::SetActorDeathState</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>deathState</declname>
        </param>
        <briefdescription>
<para>Set the deathState of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deathState</parametername>
</parameternamelist>
<parameterdescription>
<para>The deathState. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="773" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1adf34e472c2b1b1780df7ffe25fe80559" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorDeathInstant</definition>
        <argsstring>(bool isInstant) noexcept</argsstring>
        <name>SetActorDeathInstant</name>
        <qualifiedname>ActorFunctions::SetActorDeathInstant</qualifiedname>
        <param>
          <type>bool</type>
          <declname>isInstant</declname>
        </param>
        <briefdescription>
<para>Set whether the death of the temporary actor stored on the server should be instant or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the death should be instant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="782" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a3b78ee70d6ecce8a647db28a609c99f5" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorSpellsActiveAction</definition>
        <argsstring>(unsigned char action) noexcept</argsstring>
        <name>SetActorSpellsActiveAction</name>
        <qualifiedname>ActorFunctions::SetActorSpellsActiveAction</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Set the action type in the spells active changes of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The action (0 for SET, 1 for ADD, 2 for REMOVE). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="791" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="427" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1afa729ba978256b5747b51165cfa94b4e" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorAIAction</definition>
        <argsstring>(unsigned int action) noexcept</argsstring>
        <name>SetActorAIAction</name>
        <qualifiedname>ActorFunctions::SetActorAIAction</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Set the AI action of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The new action. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="799" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="432" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a4636fd46a003ada9367df1c46876e8dd" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorAITargetToPlayer</definition>
        <argsstring>(unsigned short pid) noexcept</argsstring>
        <name>SetActorAITargetToPlayer</name>
        <qualifiedname>ActorFunctions::SetActorAITargetToPlayer</qualifiedname>
        <param>
          <type>unsigned short</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
<para>Set a player as the AI target of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The player ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="807" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="437" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1acb938a24541f4d30b042dba63cccc588" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorAITargetToObject</definition>
        <argsstring>(int refNum, int mpNum) noexcept</argsstring>
        <name>SetActorAITargetToObject</name>
        <qualifiedname>ActorFunctions::SetActorAITargetToObject</qualifiedname>
        <param>
          <type>int</type>
          <declname>refNum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mpNum</declname>
        </param>
        <briefdescription>
<para>Set another object as the AI target of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>refNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The refNum of the target object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mpNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The mpNum of the target object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="816" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="448" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a7d3e4bad9429c2a00998462f9617c2be" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorAICoordinates</definition>
        <argsstring>(double x, double y, double z) noexcept</argsstring>
        <name>SetActorAICoordinates</name>
        <qualifiedname>ActorFunctions::SetActorAICoordinates</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Set the coordinates for the AI package associated with the current AI action. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The X coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The Y coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The Z coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="826" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="457" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a9dc59fec9de13c6d8f4394a7a536363b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorAIDistance</definition>
        <argsstring>(unsigned int distance) noexcept</argsstring>
        <name>SetActorAIDistance</name>
        <qualifiedname>ActorFunctions::SetActorAIDistance</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Set the distance of the AI package associated with the current AI action. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance of the package. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="834" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="464" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a3c5ea140303ba4c9f6693ef8aae9a680" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorAIDuration</definition>
        <argsstring>(unsigned int duration) noexcept</argsstring>
        <name>SetActorAIDuration</name>
        <qualifiedname>ActorFunctions::SetActorAIDuration</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
<para>Set the duration of the AI package associated with the current AI action. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the package. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="842" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="469" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1acc830c799a5ed3058a0f6a76e50c6295" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorAIRepetition</definition>
        <argsstring>(bool shouldRepeat) noexcept</argsstring>
        <name>SetActorAIRepetition</name>
        <qualifiedname>ActorFunctions::SetActorAIRepetition</qualifiedname>
        <param>
          <type>bool</type>
          <declname>shouldRepeat</declname>
        </param>
        <briefdescription>
<para>Set whether the current AI package should be repeated. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: This only has an effect on the WANDER package.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shouldRepeat</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the package should be repeated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="852" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ac0083aa92211105a7a4d135f53f96064" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::EquipActorItem</definition>
        <argsstring>(unsigned short slot, const char *refId, unsigned int count, int charge, double enchantmentCharge=-1) noexcept</argsstring>
        <name>EquipActorItem</name>
        <qualifiedname>ActorFunctions::EquipActorItem</qualifiedname>
        <param>
          <type>unsigned short</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>refId</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>charge</declname>
        </param>
        <param>
          <type>double</type>
          <declname>enchantmentCharge</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Equip an item in a certain slot of the equipment of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The equipment slot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>refId</parametername>
</parameternamelist>
<parameterdescription>
<para>The refId of the item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The count of the item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>charge</parametername>
</parameternamelist>
<parameterdescription>
<para>The charge of the item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enchantmentCharge</parametername>
</parameternamelist>
<parameterdescription>
<para>The enchantment charge of the item. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="865" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="479" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1aec0f477a154ff16d6260f52df1487ae6" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::UnequipActorItem</definition>
        <argsstring>(unsigned short slot) noexcept</argsstring>
        <name>UnequipActorItem</name>
        <qualifiedname>ActorFunctions::UnequipActorItem</qualifiedname>
        <param>
          <type>unsigned short</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Unequip the item in a certain slot of the equipment of the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The equipment slot. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="874" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a78bc241dc81d2d7981c3b19190b4d834" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::AddActorSpellActive</definition>
        <argsstring>(const char *spellId, const char *displayName, bool stackingState) noexcept</argsstring>
        <name>AddActorSpellActive</name>
        <qualifiedname>ActorFunctions::AddActorSpellActive</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>spellId</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>displayName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stackingState</declname>
        </param>
        <briefdescription>
<para>Add a new active spell to the spells active changes for the temporary actor stored, on the server, using the temporary effect values stored so far. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spellId</parametername>
</parameternamelist>
<parameterdescription>
<para>The spellId of the spell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>displayName</parametername>
</parameternamelist>
<parameterdescription>
<para>The displayName of the spell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stackingState</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the spell should stack with other instances of itself. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="885" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="492" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a8a7d2b435308ffaee2498576f0767b40" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::AddActorSpellActiveEffect</definition>
        <argsstring>(int effectId, double magnitude, double duration, double timeLeft, int arg) noexcept</argsstring>
        <name>AddActorSpellActiveEffect</name>
        <qualifiedname>ActorFunctions::AddActorSpellActiveEffect</qualifiedname>
        <param>
          <type>int</type>
          <declname>effectId</declname>
        </param>
        <param>
          <type>double</type>
          <declname>magnitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeLeft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Add a new effect to the next active spell that will be added to the temporary actor stored on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>effectId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the effect. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>magnitude</parametername>
</parameternamelist>
<parameterdescription>
<para>The magnitude of the effect. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the effect. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeLeft</parametername>
</parameternamelist>
<parameterdescription>
<para>The timeLeft for the effect. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The arg of the effect when applicable, e.g. the skill used for Fortify Skill or the attribute used for Fortify Attribute. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="899" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="505" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ab235025f55e101d3ab69ae706873d693" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::AddActor</definition>
        <argsstring>() noexcept</argsstring>
        <name>AddActor</name>
        <qualifiedname>ActorFunctions::AddActor</qualifiedname>
        <briefdescription>
<para>Add a copy of the server&apos;s temporary actor to the server&apos;s temporary actor list. </para>
        </briefdescription>
        <detaileddescription>
<para>In the process, the server&apos;s temporary actor will automatically be cleared so a new one can be set up.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="909" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="517" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a11eafb908544e03e2d54d5a86f5e3fd5" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorList</definition>
        <argsstring>() noexcept</argsstring>
        <name>SendActorList</name>
        <qualifiedname>ActorFunctions::SendActorList</qualifiedname>
        <briefdescription>
<para>Send an ActorList packet. </para>
        </briefdescription>
        <detaileddescription>
<para>It is sent only to the player for whom the current actor list was initialized.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="918" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="524" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad0288773f0c416058d724003708a8c46" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorAuthority</definition>
        <argsstring>() noexcept</argsstring>
        <name>SendActorAuthority</name>
        <qualifiedname>ActorFunctions::SendActorAuthority</qualifiedname>
        <briefdescription>
<para>Send an ActorAuthority packet. </para>
        </briefdescription>
        <detaileddescription>
<para>The player for whom the current actor list was initialized is recorded in the server memory as the new actor authority for the actor list&apos;s cell.</para>
<para>The packet is sent to that player as well as all other players who have the cell loaded.</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="930" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="531" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a587105bd8f915c3ff9c36d60498f322b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorPosition</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorPosition</name>
        <qualifiedname>ActorFunctions::SendActorPosition</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorPosition packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="942" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="548" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ac22683512d6ec3a315f6ce3e161a05b2" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorStatsDynamic</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorStatsDynamic</name>
        <qualifiedname>ActorFunctions::SendActorStatsDynamic</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorStatsDynamic packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="954" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="567" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ac947bad400682fe4a4b9e22fa0a766d1" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorEquipment</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorEquipment</name>
        <qualifiedname>ActorFunctions::SendActorEquipment</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorEquipment packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="966" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="586" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a88cb727091d67a160bcbc8989720855f" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorSpellsActiveChanges</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorSpellsActiveChanges</name>
        <qualifiedname>ActorFunctions::SendActorSpellsActiveChanges</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorSpellsActive packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="978" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="605" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1aca7cad289a57fbc24631329e90387fe9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorSpeech</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorSpeech</name>
        <qualifiedname>ActorFunctions::SendActorSpeech</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorSpeech packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="989" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="624" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a4742033380416957d110f657a5bc2c83" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorDeath</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorDeath</name>
        <qualifiedname>ActorFunctions::SendActorDeath</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorDeath packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1000" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="643" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a27b1ee6489ff95e812d41e9e7ae8ea43" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorAI</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorAI</name>
        <qualifiedname>ActorFunctions::SendActorAI</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorAI packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1011" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="662" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a05f34c3f738550b3cad29fc44ae01781" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SendActorCellChange</definition>
        <argsstring>(bool sendToOtherVisitors, bool skipAttachedPlayer) noexcept</argsstring>
        <name>SendActorCellChange</name>
        <qualifiedname>ActorFunctions::SendActorCellChange</qualifiedname>
        <param>
          <type>bool</type>
          <declname>sendToOtherVisitors</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipAttachedPlayer</declname>
        </param>
        <briefdescription>
<para>Send an ActorCellChange packet. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sendToOtherVisitors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this packet should be sent to cell visitors other than the player attached to the packet (false by default). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>skipAttachedPlayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the packet should skip being sent to the player attached to the packet (false by default).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1023" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="681" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a2efbee9b37fef03d07b9e2f21a50e9f9" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::ReadLastActorList</definition>
        <argsstring>() noexcept</argsstring>
        <name>ReadLastActorList</name>
        <qualifiedname>ActorFunctions::ReadLastActorList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1028" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="703" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1ad67f41fe709b25aa7de3d3237a82cf00" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::InitializeActorList</definition>
        <argsstring>(unsigned short pid) noexcept</argsstring>
        <name>InitializeActorList</name>
        <qualifiedname>ActorFunctions::InitializeActorList</qualifiedname>
        <param>
          <type>unsigned short</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1029" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="708" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a583a7493fc7fd4ae6854dd62a62735e0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::CopyLastActorListToStore</definition>
        <argsstring>() noexcept</argsstring>
        <name>CopyLastActorListToStore</name>
        <qualifiedname>ActorFunctions::CopyLastActorListToStore</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1030" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="714" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a9d3597c97b0fe0f825c5866015dd0d29" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorRefNumIndex</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorRefNumIndex</name>
        <qualifiedname>ActorFunctions::GetActorRefNumIndex</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1031" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="719" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a5e6ae49d21dea95d5480be9b8da29c6b" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ActorFunctions::GetActorKillerRefNumIndex</definition>
        <argsstring>(unsigned int index) noexcept</argsstring>
        <name>GetActorKillerRefNumIndex</name>
        <qualifiedname>ActorFunctions::GetActorKillerRefNumIndex</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1032" column="25" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="724" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="class_actor_functions_1a2e32274dd5e41c09bb3e6da238287233" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ActorFunctions::SetActorRefNumIndex</definition>
        <argsstring>(int refNum) noexcept</argsstring>
        <name>SetActorRefNumIndex</name>
        <qualifiedname>ActorFunctions::SetActorRefNumIndex</qualifiedname>
        <param>
          <type>int</type>
          <declname>refNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="1033" column="17" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.cpp" bodystart="729" bodyend="732"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/apps/openmw-mp/Script/Functions/Actors.hpp" line="132" column="1" bodyfile="src/apps/openmw-mp/Script/Functions/Actors.hpp" bodystart="133" bodyend="1034"/>
    <listofallmembers>
      <member refid="class_actor_functions_1ab235025f55e101d3ab69ae706873d693" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>AddActor</name></member>
      <member refid="class_actor_functions_1a78bc241dc81d2d7981c3b19190b4d834" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>AddActorSpellActive</name></member>
      <member refid="class_actor_functions_1a8a7d2b435308ffaee2498576f0767b40" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>AddActorSpellActiveEffect</name></member>
      <member refid="class_actor_functions_1a5183f07b08b2293440abf55df33ea5eb" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>ClearActorList</name></member>
      <member refid="class_actor_functions_1a583a7493fc7fd4ae6854dd62a62735e0" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>CopyLastActorListToStore</name></member>
      <member refid="class_actor_functions_1a86ab8e7c879000379315d0d988f6f54c" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>CopyReceivedActorListToStore</name></member>
      <member refid="class_actor_functions_1a13efdece02432ef55a705e1c619a8437" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>DoesActorHavePlayerKiller</name></member>
      <member refid="class_actor_functions_1a01b3593b9d35f8029c6814db335ffc9b" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>DoesActorHavePosition</name></member>
      <member refid="class_actor_functions_1a943254ebc543b693e93fbc0a03dca922" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>DoesActorHaveStatsDynamic</name></member>
      <member refid="class_actor_functions_1a44a928a0f58b15b9c3b7ad90ba51dac7" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>DoesActorSpellsActiveHavePlayerCaster</name></member>
      <member refid="class_actor_functions_1ac0083aa92211105a7a4d135f53f96064" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>EquipActorItem</name></member>
      <member refid="class_actor_functions_1a35098cfd190882887670d3e622143c2d" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorCell</name></member>
      <member refid="class_actor_functions_1ad921632b26ae31c0c6b97a1555b55986" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorDeathState</name></member>
      <member refid="class_actor_functions_1a01c726a78df90871e15413d9596c91aa" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorEquipmentItemCharge</name></member>
      <member refid="class_actor_functions_1ad902ffea43fdc23d781c5a8271d38a2f" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorEquipmentItemCount</name></member>
      <member refid="class_actor_functions_1a692a856b03f1b23f3f29392978df1d1e" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorEquipmentItemEnchantmentCharge</name></member>
      <member refid="class_actor_functions_1ae57564b8cc53b2b9d21d9246834b9232" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorEquipmentItemRefId</name></member>
      <member refid="class_actor_functions_1ad46cb4af8bc7124b49f9598898dc0f00" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorFatigueBase</name></member>
      <member refid="class_actor_functions_1a63214d669d5d3e36b2ffdc33f7560448" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorFatigueCurrent</name></member>
      <member refid="class_actor_functions_1a92a8e0180fd353abbed4f36e8ad5c3d9" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorFatigueModified</name></member>
      <member refid="class_actor_functions_1ad5fc0beac4ed24944d06c6894cdf5dc5" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorHealthBase</name></member>
      <member refid="class_actor_functions_1a428f0d1b72ea040040f288c006827c78" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorHealthCurrent</name></member>
      <member refid="class_actor_functions_1af6988c34f73e5815b6b2bbf8995e4037" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorHealthModified</name></member>
      <member refid="class_actor_functions_1a8426ef0013b0b1414a758b974076e392" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorKillerMpNum</name></member>
      <member refid="class_actor_functions_1ac6ea366af0650045fdc12e8bfb752276" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorKillerName</name></member>
      <member refid="class_actor_functions_1a2b96df935c5076c53770ebd75a862481" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorKillerPid</name></member>
      <member refid="class_actor_functions_1add106b61e3217ac1714ee08146edad41" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorKillerRefId</name></member>
      <member refid="class_actor_functions_1a5cd346bdb9565b0b37373dc100309927" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorKillerRefNum</name></member>
      <member refid="class_actor_functions_1a5e6ae49d21dea95d5480be9b8da29c6b" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorKillerRefNumIndex</name></member>
      <member refid="class_actor_functions_1a8a2f1ea7c777f44d0a5ddd9e8e35ae1d" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorListAction</name></member>
      <member refid="class_actor_functions_1aa7c681f1756c17c35be4b612c5aad3d1" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorListSize</name></member>
      <member refid="class_actor_functions_1a979e56e23da4bd93cef00dda25d46243" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorMagickaBase</name></member>
      <member refid="class_actor_functions_1a9417a1ec1cd234f9b663c4385fbe14f1" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorMagickaCurrent</name></member>
      <member refid="class_actor_functions_1ae958ddf5fbe051e822e2821b53352c4a" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorMagickaModified</name></member>
      <member refid="class_actor_functions_1aa608a1be9dbb84573abc51f21e416296" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorMpNum</name></member>
      <member refid="class_actor_functions_1ad1c670bfeb76cbb43ea65a812100e3a8" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorPosX</name></member>
      <member refid="class_actor_functions_1a9fed70eb8bb6d8b51fbaaa5e67b071b6" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorPosY</name></member>
      <member refid="class_actor_functions_1a35396540235173c1c046b61f8586380f" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorPosZ</name></member>
      <member refid="class_actor_functions_1a1fd9d2a7b385225cc696f34b8db60c57" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorRefId</name></member>
      <member refid="class_actor_functions_1a3bf86ca07dd2aa12a0762562fd494211" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorRefNum</name></member>
      <member refid="class_actor_functions_1a9d3597c97b0fe0f825c5866015dd0d29" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorRefNumIndex</name></member>
      <member refid="class_actor_functions_1a9f746024df5a25ec60d2d42be09392a7" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorRotX</name></member>
      <member refid="class_actor_functions_1aa7c663e9fff0b197085ce262bc1db41f" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorRotY</name></member>
      <member refid="class_actor_functions_1a8e9cdf9ac405ae6b70b0e7eb95b72949" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorRotZ</name></member>
      <member refid="class_actor_functions_1add56d0fea397b3efa2b27cfb0474623a" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveCasterMpNum</name></member>
      <member refid="class_actor_functions_1a8f66807798a4b089c4ad8bba71e99b5f" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveCasterPid</name></member>
      <member refid="class_actor_functions_1ad91178f0c8229d9a5d358b149b76055a" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveCasterRefId</name></member>
      <member refid="class_actor_functions_1a0c5cb30b6547bda969b44055e6e88cf5" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveCasterRefNum</name></member>
      <member refid="class_actor_functions_1a1711f0951e7a3013f2c073fe4940d9eb" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveChangesAction</name></member>
      <member refid="class_actor_functions_1a8ec9c9865eed7c169394d30f9783143b" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveChangesSize</name></member>
      <member refid="class_actor_functions_1ac795d0f5fa9b335d77c1472c06c09ff7" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveDisplayName</name></member>
      <member refid="class_actor_functions_1a55980d314d76dbe74bd67ef0f6c710e1" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveEffectArg</name></member>
      <member refid="class_actor_functions_1abac628afd5d41e24ea49677acd3c6fe8" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveEffectCount</name></member>
      <member refid="class_actor_functions_1a1bcb226ff794a1760a6010a83921c416" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveEffectDuration</name></member>
      <member refid="class_actor_functions_1a1476c673b40ee89f3c0c53e938f9759a" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveEffectId</name></member>
      <member refid="class_actor_functions_1a67c2efdd349d2631d2010b56039178fe" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveEffectMagnitude</name></member>
      <member refid="class_actor_functions_1a12c0b32ca1bae6aa2e338be0497f6d0a" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveEffectTimeLeft</name></member>
      <member refid="class_actor_functions_1a0ed5bc6165083be32657a985a6670907" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveId</name></member>
      <member refid="class_actor_functions_1a68258d2d17159f666a92564c479f87c4" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>GetActorSpellsActiveStackingState</name></member>
      <member refid="class_actor_functions_1ad67f41fe709b25aa7de3d3237a82cf00" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>InitializeActorList</name></member>
      <member refid="class_actor_functions_1a48dcba7ee0bd36e449b0f849e623485d" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>ReadCellActorList</name></member>
      <member refid="class_actor_functions_1a2efbee9b37fef03d07b9e2f21a50e9f9" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>ReadLastActorList</name></member>
      <member refid="class_actor_functions_1a00028c7774b0517485dc1b97b84e5f2a" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>ReadReceivedActorList</name></member>
      <member refid="class_actor_functions_1a27b1ee6489ff95e812d41e9e7ae8ea43" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorAI</name></member>
      <member refid="class_actor_functions_1ad0288773f0c416058d724003708a8c46" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorAuthority</name></member>
      <member refid="class_actor_functions_1a05f34c3f738550b3cad29fc44ae01781" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorCellChange</name></member>
      <member refid="class_actor_functions_1a4742033380416957d110f657a5bc2c83" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorDeath</name></member>
      <member refid="class_actor_functions_1ac947bad400682fe4a4b9e22fa0a766d1" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorEquipment</name></member>
      <member refid="class_actor_functions_1a11eafb908544e03e2d54d5a86f5e3fd5" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorList</name></member>
      <member refid="class_actor_functions_1a587105bd8f915c3ff9c36d60498f322b" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorPosition</name></member>
      <member refid="class_actor_functions_1aca7cad289a57fbc24631329e90387fe9" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorSpeech</name></member>
      <member refid="class_actor_functions_1a88cb727091d67a160bcbc8989720855f" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorSpellsActiveChanges</name></member>
      <member refid="class_actor_functions_1ac22683512d6ec3a315f6ce3e161a05b2" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SendActorStatsDynamic</name></member>
      <member refid="class_actor_functions_1afa729ba978256b5747b51165cfa94b4e" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorAIAction</name></member>
      <member refid="class_actor_functions_1a7d3e4bad9429c2a00998462f9617c2be" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorAICoordinates</name></member>
      <member refid="class_actor_functions_1a9dc59fec9de13c6d8f4394a7a536363b" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorAIDistance</name></member>
      <member refid="class_actor_functions_1a3c5ea140303ba4c9f6693ef8aae9a680" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorAIDuration</name></member>
      <member refid="class_actor_functions_1acc830c799a5ed3058a0f6a76e50c6295" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorAIRepetition</name></member>
      <member refid="class_actor_functions_1acb938a24541f4d30b042dba63cccc588" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorAITargetToObject</name></member>
      <member refid="class_actor_functions_1a4636fd46a003ada9367df1c46876e8dd" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorAITargetToPlayer</name></member>
      <member refid="class_actor_functions_1a077fada2c7cc2e0090a0ac324a8d5e8d" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorCell</name></member>
      <member refid="class_actor_functions_1adf34e472c2b1b1780df7ffe25fe80559" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorDeathInstant</name></member>
      <member refid="class_actor_functions_1a8fc986d0eb3439fb4710b61222bd6903" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorDeathState</name></member>
      <member refid="class_actor_functions_1ad9a7c0351bc57929de28b83ed640c8b3" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorFatigueBase</name></member>
      <member refid="class_actor_functions_1a44ce9ec02ed6bdc209092a839053b915" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorFatigueCurrent</name></member>
      <member refid="class_actor_functions_1a24923e0279a769bc3b0937e33142d690" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorFatigueModified</name></member>
      <member refid="class_actor_functions_1a2a738b6139cf86809df5975f030b7ed9" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorHealthBase</name></member>
      <member refid="class_actor_functions_1ac8e31b0ab7d96e31ebef63090c77cd80" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorHealthCurrent</name></member>
      <member refid="class_actor_functions_1a290f37b9dfbd293c49ea6dc4b7e4842c" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorHealthModified</name></member>
      <member refid="class_actor_functions_1a20a2d5600f2122f10e0f0a0d19f24b96" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorListAction</name></member>
      <member refid="class_actor_functions_1ae489634857ab65f8ee328eb513f75b83" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorListCell</name></member>
      <member refid="class_actor_functions_1aab5588e100338fbfe3433b7336520317" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorListPid</name></member>
      <member refid="class_actor_functions_1a8b0ae56ad796c58a28c7a459a8e98fbd" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorMagickaBase</name></member>
      <member refid="class_actor_functions_1a233b066ee815d91c708f84055bb5937e" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorMagickaCurrent</name></member>
      <member refid="class_actor_functions_1ae173d516669655519476d14489b6b942" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorMagickaModified</name></member>
      <member refid="class_actor_functions_1adcf658fd068031ce880a00cc5751fcc6" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorMpNum</name></member>
      <member refid="class_actor_functions_1a0e3603266f330bb0836492eb6270ec94" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorPosition</name></member>
      <member refid="class_actor_functions_1ac5bfe48631894bae0f6240f139f35587" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorRefId</name></member>
      <member refid="class_actor_functions_1ae09dc47f9a37341a50ff8515df9f1114" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorRefNum</name></member>
      <member refid="class_actor_functions_1a2e32274dd5e41c09bb3e6da238287233" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorRefNumIndex</name></member>
      <member refid="class_actor_functions_1a731727c3a7f8a5dd9975357fc959b63c" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorRotation</name></member>
      <member refid="class_actor_functions_1a3ac1ed5a1a0e0ec778b4c522d3730bb0" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorSound</name></member>
      <member refid="class_actor_functions_1a3b78ee70d6ecce8a647db28a609c99f5" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>SetActorSpellsActiveAction</name></member>
      <member refid="class_actor_functions_1aec0f477a154ff16d6260f52df1487ae6" prot="public" virt="non-virtual"><scope>ActorFunctions</scope><name>UnequipActorItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
